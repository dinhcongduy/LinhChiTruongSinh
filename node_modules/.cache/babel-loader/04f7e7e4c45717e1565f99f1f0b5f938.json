{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\Bakery_ReactjsSourceCode\\\\src\\\\views\\\\oders\\\\ManageOrdersView\\\\MAWB.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Table, Button, TableBody, TableCell, TableContainer, TableHead, TableRow, Divider, Grid, TextField, makeStyles, Paper, Typography, Drawer, FormControlLabel, MenuItem } from '@material-ui/core';\nimport moment from 'moment';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { LinkApi } from 'src/utils/api/api-link';\nimport { GET, POST } from 'src/utils/api/method';\nimport { InputLabelCustom } from 'src/components/custom/inputtxt';\nimport { useSelector, useDispatch, Provider } from \"react-redux\";\nimport { updateForm, updateDonHang, updatePay } from \"../../customer/AccountingView/reducersAndActions\";\nimport configureStore from \"../../customer/AccountingView/store\";\nconst store = configureStore();\n\nconst Form = ({\n  type,\n  item\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    form\n  } = useSelector(state => ({ ...state.reducer\n  }));\n  const {\n    thongtindonhang\n  } = useSelector(state => ({ ...state.reducer\n  }));\n  const {\n    pay\n  } = useSelector(state => ({ ...state.reducer\n  }));\n  const dispatch = useDispatch();\n  const change = useCallback(e => dispatch(updateDonHang(e)), [dispatch]);\n  const changePay = useCallback(e => dispatch(updatePay(e)), [dispatch]);\n  const [payItem, setpayitem] = useState([]);\n  const [hinhthucthanhtoan, sethinhthucthanhtoan] = useState('Tiền mặt');\n  const [hinhthucthanhtoanship, sethinhthucthanhtoanship] = useState('Tiền mặt');\n  const [customers, setcustomers] = useState([]);\n  const [orderdate, setorderdate] = useState(moment(new Date(), 'YYYY-MM-DD').format().substring(0, 10));\n  const httt = [{\n    key: 1,\n    ht: \"Tiền mặt\"\n  }, {\n    key: 3,\n    ht: 'Chuyển khoản'\n  }];\n  useEffect(() => {\n    if (type === \"newMAWB\") {\n      change({\n        hoten: \"\",\n        sodienthoai: \"\",\n        diachi: \"\",\n        chitietdonhang: \"\",\n        loichuc: \"\",\n        tongsotien: \"\",\n        shipestimate: \"\",\n        shipthat: \"\",\n        deleverynote: \"\",\n        note: \"\",\n        thanhtoan: \"\"\n      });\n      changePay({\n        OrderId: \"\",\n        PaymentType: \"\",\n        Amount: 0,\n        PayDate: \"\",\n        Cashier: \"\",\n        Created: \"\",\n        CreatedBy: \"\",\n        Modified: \"\",\n        ModifiedBy: \"\",\n        Note: \"\",\n        OldId: \"\"\n      });\n    } else {\n      getItemPayment();\n      getallCustomer();\n      change({\n        ID: item.ID,\n        code: item.Code,\n        hoten: item.CustomerName,\n        sodienthoai: item.CustomerPhone,\n        diachi: item.CustomerAddress,\n        chitietdonhang: item.Description,\n        loichuc: item.LoiChuc,\n        tongsotien: item.PriceTotal,\n        shipestimate: item.ShipEstimate,\n        shipthat: item.ShipThat,\n        deleverynote: item.DeliveryNote,\n        note: item.Note,\n        thanhtoan: \"\"\n      });\n    }\n  }, []);\n\n  const getItemPayment = async () => {\n    await GET(LinkApi.order_getByOrderId + item.ID).then(payitem => {\n      setpayitem(payitem); // console.log(payitem)\n      // console.log(payItem)\n\n      changePay({\n        ID: payitem.ID,\n        OrderId: payitem.OrderId,\n        PaymentType: payitem.PaymentType,\n        Amount: payitem.Amount,\n        PayDate: payitem.PayDate,\n        Cashier: payitem.Cashier,\n        Created: payitem.Created,\n        CreatedBy: payitem.CreatedBy,\n        Modified: payitem.Modified,\n        ModifiedBy: payitem.ModifiedBy,\n        Note: payitem.Note,\n        OldId: payitem.OldId\n      }); //console.log(\"payitem: \", pay) \n    }); //  \n  };\n\n  const getallCustomer = async () => {\n    let res = await GET(LinkApi.customers_getall); //console.log(res); \n\n    if (res !== null) {\n      setcustomers(res);\n    }\n  };\n\n  const saveOrder = async () => {\n    const newcustomer = {\n      Code: '',\n      Name: thongtindonhang.hoten,\n      Phone: thongtindonhang.sodienthoai,\n      Address: thongtindonhang.diachi\n    };\n    let customernewID = null;\n\n    for (let i = 0; i < customers.length; i++) {\n      if (newcustomer.Phone === customers[i].Phone) {\n        customernewID = customers[i].ID;\n      }\n    }\n\n    let addCustomer = await POST(LinkApi.customer_add, newcustomer).then(responsecus => {//console.log(newOrder)\n    }); //console.log(infoOrder)\n\n    const infoOrder = {\n      \"Code\": \"TOBI\" + moment(new Date(), 'DD-MM-YYYY').format().substring(0, 19),\n      \"ToShow\": 0,\n      \"CustomerId\": 1,\n      \"CustomerName\": thongtindonhang.hoten,\n      \"CustomerPhone\": thongtindonhang.sodienthoai,\n      \"CustomerAddress\": thongtindonhang.diachi,\n      \"UserId\": 1,\n      \"Description\": thongtindonhang.chitietdonhang,\n      \"LoiChuc\": thongtindonhang.loichuc,\n      \"PriceTotal\": thongtindonhang.tongsotien,\n      \"IsConNo\": Number(thongtindonhang.tongsotien) <= Number(pay.Amount) ? '0' : '1',\n      \"ShipEstimate\": thongtindonhang.shipestimate,\n      \"ShipThat\": thongtindonhang.shipthat,\n      \"DeliveryNote\": thongtindonhang.deleverynote,\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10) + \" \" + moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      //\"Created\": orderdate,\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": thongtindonhang.note\n    };\n    let newOrder = await POST(LinkApi.order_add, infoOrder).then(response => {\n      const infoPayment = {\n        \"OrderId\": response.ID,\n        \"PaymentType\": pay.PaymentType === 'Tiền mặt' ? 1 : 0,\n        \"Amount\": pay.Amount,\n        \"PayDate\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10) + \" \" + moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n        \"Cashier\": \"Bưởi\",\n        \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10) + \" \" + moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n        \"CreatedBy\": 1,\n        \"Modified\": null,\n        \"ModifiedBy\": 0,\n        \"Note\": pay.note,\n        \"OldId\": \"\"\n      };\n      let newPay = POST(LinkApi.pay_add, infoPayment).then(responsez => console.log(responsez)).catch(error => alert('error', error));\n    }).catch(error => alert('error', error));\n  };\n\n  const updateOrder = async () => {\n    const OldInfoOrder = item;\n    OldInfoOrder.ToShow = 1;\n    await POST(LinkApi.order_update, OldInfoOrder); //update ToShow cua ban ghi cu thanh 1 de ko view ra\n\n    const infoOrder = {\n      //\"ID\":thongtindonhang.ID,\n      \"ToShow\": 0,\n      \"Code\": thongtindonhang.code,\n      //\"CustomerId\": 1,\n      \"CustomerName\": thongtindonhang.hoten,\n      \"CustomerPhone\": thongtindonhang.sodienthoai,\n      \"CustomerAddress\": thongtindonhang.diachi,\n      \"UserId\": 1,\n      \"Description\": thongtindonhang.chitietdonhang,\n      \"LoiChuc\": thongtindonhang.loichuc,\n      \"PriceTotal\": thongtindonhang.tongsotien,\n      \"IsConNo\": thongtindonhang.tongsotien === pay.Amount ? '1' : '0',\n      \"ShipEstimate\": thongtindonhang.shipestimate,\n      \"ShipThat\": thongtindonhang.shipthat,\n      \"DeliveryNote\": thongtindonhang.deleverynote,\n      //\"Created\": orderdate,\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10) + \" \" + moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": thongtindonhang.note,\n      \"OldId\": thongtindonhang.ID\n    };\n    let newOrder = await POST(LinkApi.order_add, infoOrder) //add order mới và update ID vào bảng pay\n    .then(response => {\n      updatePayItem(response);\n    }).catch(error => console.log('error2', error));\n  };\n\n  const updatePayItem = async response => {\n    const OldInfoPayment = payItem;\n    OldInfoPayment.OrderId = response.ID;\n    OldInfoPayment.OldId = payItem.ID;\n    console.log(OldInfoPayment);\n    await POST(LinkApi.pay_update, OldInfoPayment).then(responsez => console.log('responsez', responsez)).catch(error => console.log('error1', error));\n    const infoPayment = {\n      \"OrderId\": response.ID,\n      \"PaymentType\": pay.PaymentType,\n      \"Amount\": pay.Amount,\n      \"PayDate\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10) + \" \" + moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"Cashier\": \"Bưởi\",\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10) + \" \" + moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": pay.note,\n      \"OldId\": \"\"\n    };\n  };\n\n  const submit = event => {\n    event.preventDefault();\n    console.log(\"SUBMIT\", event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: submit,\n    className: classes.root,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, type === \"editMAWB\" ? /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: 16,\n      marginTop: 10,\n      fontFamily: 'sans-serif',\n      color: 'white',\n      backgroundColor: '#3f51b5',\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 10\n    }\n  }, \"S\\u1EEDa \\u0111\\u01A1n h\\xE0ng\") : /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: 16,\n      marginTop: 10,\n      fontFamily: 'sans-serif',\n      color: 'white',\n      backgroundColor: '#3f51b5',\n      padding: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 10\n    }\n  }, \"T\\u1EA1o \\u0111\\u01A1n h\\xE0ng m\\u1EDBi\"), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      fontSize: 16,\n      marginTop: 10,\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      backgroundColor: '',\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: 250,\n      backgroundColor: '',\n      paddingTop: 10,\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: styles.boxTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Th\\xF4ng tin kh\\xE1ch h\\xE0ng\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      border: '1px solid grey',\n      padding: 1,\n      backgroundColor: 'white',\n      height: 220,\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Họ tên',\n    value: thongtindonhang.hoten,\n    onChange: e => change({\n      hoten: e.target.value\n    }),\n    customstyle: null,\n    multiline: false,\n    rowsMax: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Số điện thoại',\n    value: thongtindonhang.sodienthoai,\n    onChange: e => change({\n      sodienthoai: e.target.value\n    }),\n    customstyle: null,\n    multiline: false,\n    rowsMax: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Địa chỉ',\n    value: thongtindonhang.diachi,\n    onChange: e => change({\n      diachi: e.target.value\n    }),\n    customstyle: null,\n    multiline: true,\n    rowsMax: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Lời chúc',\n    value: thongtindonhang.loichuc,\n    onChange: e => change({\n      loichuc: e.target.value\n    }),\n    customstyle: null,\n    multiline: false,\n    rowsMax: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      backgroundColor: '',\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: 250,\n      backgroundColor: '',\n      paddingTop: 10,\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: styles.boxTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"Thanh to\\xE1n\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      border: '1px solid grey',\n      padding: 1,\n      backgroundColor: 'white',\n      height: 220,\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    fullWidth: true //className={classes.formControl}\n    ,\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formControlLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 24\n      }\n    }, 'Phí ship thu khách'),\n    style: {\n      backgroundColor: ''\n    },\n    labelPlacement: \"start\",\n    control: /*#__PURE__*/React.createElement(TextField, {\n      size: \"small\",\n      type: 'number',\n      autoComplete: \"off\",\n      style: {\n        width: 440\n      },\n      InputProps: {\n        style: {\n          fontSize: 13,\n          marginRight: 30,\n          marginLeft: 10\n        }\n      },\n      name: \"country\",\n      onChange: e => change({\n        shipestimate: e.target.value\n      }),\n      required: true,\n      value: thongtindonhang.shipestimate,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Phí ship thực tế',\n    value: thongtindonhang.shipthat,\n    onChange: e => change({\n      shipthat: e.target.value\n    }),\n    customstyle: null,\n    multiline: false,\n    rowsMax: 1,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Thành tiền',\n    value: thongtindonhang.tongsotien,\n    onChange: e => change({\n      tongsotien: e.target.value\n    }),\n    customstyle: null,\n    multiline: false,\n    rowsMax: 1,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }), type === \"newMAWB\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    fullWidth: true //className={classes.formControl}\n    ,\n    label: /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formControlLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 28\n      }\n    }, 'Thanh toán'),\n    style: {\n      backgroundColor: ''\n    },\n    labelPlacement: \"start\",\n    control: /*#__PURE__*/React.createElement(TextField, {\n      size: \"small\",\n      type: 'number',\n      style: {\n        width: 200\n      },\n      InputProps: {\n        style: {\n          fontSize: 13,\n          marginRight: 30,\n          marginLeft: 10\n        }\n      },\n      name: \"country\",\n      onChange: e => changePay({\n        Amount: e.target.value\n      }),\n      required: true,\n      value: pay.Amount,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    size: \"small\",\n    InputProps: {\n      style: {\n        fontSize: 14,\n        backgroundColor: 'white'\n      }\n    },\n    style: {\n      width: 150,\n      marginLeft: 10,\n      fontSize: 14,\n      backgroundColor: 'white'\n    } //value={httt}\n    ,\n    value: pay.PaymentType,\n    onChange: e => changePay({\n      PaymentType: e.target.value\n    }),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 19\n    }\n  }, httt.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.key,\n    value: option.ht,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 23\n    }\n  }, option.ht))), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: 12,\n      marginLeft: 18,\n      marginTop: 10\n    },\n    color: \"textPrimary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 19\n    }\n  }, \"Kh\\xE1ch n\\u1EE3:\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", thongtindonhang.tongsotien - pay.Amount, \" \\u0111\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, \"\\xA0\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      backgroundColor: '',\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      height: 260,\n      backgroundColor: '',\n      paddingTop: 10,\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: styles.boxTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }, \"Y\\xEAu c\\u1EA7u chi ti\\u1EBFt\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      border: '1px solid grey',\n      padding: 1,\n      backgroundColor: 'white',\n      height: 240,\n      borderRadius: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Yêu cầu giao hàng',\n    value: thongtindonhang.deleverynote,\n    onChange: e => change({\n      deleverynote: e.target.value\n    }),\n    customstyle: {\n      marginLeft: 40\n    },\n    multiline: false,\n    rowsMax: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputLabelCustom, {\n    label: 'Ngày xuất hàng',\n    value: thongtindonhang.note,\n    onChange: e => change({\n      note: e.target.value\n    }),\n    customstyle: {\n      marginLeft: 40\n    },\n    multiline: false,\n    rowsMax: 1,\n    type: 'date',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    fullWidth: true //className={classes.formControl}\n    ,\n    label: /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        marginLeft: 10,\n        width: 150,\n        fontFamily: 'sans-serif',\n        fontSize: 12,\n        alignSelf: \"flex-start\",\n        paddingLeft: 0,\n        textAlign: 'start'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 24\n      }\n    }, \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m\"),\n    style: {\n      margin: 5\n    },\n    labelPlacement: \"start\",\n    control: /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      size: \"small\",\n      InputProps: {\n        style: {\n          fontSize: 14\n        }\n      },\n      style: {\n        width: 800\n      } // helperText=\"Please specify the first name\"\n      ,\n      name: \"firstName\",\n      required: true,\n      value: thongtindonhang.chitietdonhang,\n      onChange: e => change({\n        chitietdonhang: e.target.value\n      }),\n      variant: \"outlined\",\n      multiline: true,\n      rows: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  })))), type === \"newMAWB\" ? /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    style: {\n      marginTop: 10,\n      color: 'white',\n      backgroundColor: '#3f51b5',\n      padding: 10\n    },\n    onClick: saveOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, \"SAVEq\") : /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    style: {\n      marginTop: 10,\n      color: 'white',\n      backgroundColor: '#3f51b5',\n      padding: 10\n    },\n    onClick: updateOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, \"UPDATE\")));\n};\n\n_s(Form, \"dZk/MrPwZX4+/Jg8UDIlpv9n49M=\", false, function () {\n  return [useStyles, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Form;\nconst states = [{\n  value: 'alabama',\n  label: 'Alabama'\n}, {\n  value: 'new-york',\n  label: 'New York'\n}, {\n  value: 'san-francisco',\n  label: 'San Francisco'\n}];\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 1150,\n    backgroundColor: 'rgb(240, 240, 240)'\n  },\n  inputRoot: {\n    color: 'green',\n    fontSize: 12,\n    height: 120\n  },\n  paper: {\n    padding: 2,\n    textAlign: 'center',\n    color: 'gray'\n  },\n  formControlLabel: {\n    width: 110,\n    fontFamily: 'sans-serif',\n    fontSize: 12,\n    alignSelf: \"flex-end\",\n    paddingLeft: 0,\n    textAlign: 'start',\n    backgroundColor: ''\n  },\n  formControl: {\n    width: 530,\n    margin: 5,\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    alignSelf: \"center\",\n    backgroundColor: ''\n  },\n  table: {\n    minWidth: 650\n  }\n}));\nconst styles = {\n  textInput: {\n    width: 450,\n    marginLeft: 10\n  },\n  boxTitle: {\n    fontSize: 16,\n    marginTop: 0,\n    color: 'green'\n  },\n  autocomlete: {\n    marginLeft: 10,\n    width: 400,\n    backgroundColor: ''\n  }\n};\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nconst MAWB = ({\n  className,\n  type,\n  item,\n  ...rest\n}) => {\n  _s2();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n  const [opendialog, setOpendialog] = React.useState(false);\n  const [opensides, setopenside] = useState(false);\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\" //   onClick={setopenside(false)}\n    //   onKeyDown={setopenside(false)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }\n  }, \"kkk\"));\n\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  }); // alert(item.customerId);\n\n  const handleChangecheck = event => {\n    setChecked(!checked);\n  };\n\n  const [valuez, setValuez] = useState(\"\");\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    type: type,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(MAWB, \"MZTJlhrfe3w/OPPsYOfgTf39pBM=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = MAWB;\nMAWB.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  item: PropTypes.object\n};\nexport default MAWB;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"MAWB\");","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/views/oders/ManageOrdersView/MAWB.js"],"names":["React","useState","useCallback","useEffect","clsx","PropTypes","Table","Button","TableBody","TableCell","TableContainer","TableHead","TableRow","Divider","Grid","TextField","makeStyles","Paper","Typography","Drawer","FormControlLabel","MenuItem","moment","TextareaAutosize","Autocomplete","LinkApi","GET","POST","InputLabelCustom","useSelector","useDispatch","Provider","updateForm","updateDonHang","updatePay","configureStore","store","Form","type","item","classes","useStyles","form","state","reducer","thongtindonhang","pay","dispatch","change","e","changePay","payItem","setpayitem","hinhthucthanhtoan","sethinhthucthanhtoan","hinhthucthanhtoanship","sethinhthucthanhtoanship","customers","setcustomers","orderdate","setorderdate","Date","format","substring","httt","key","ht","hoten","sodienthoai","diachi","chitietdonhang","loichuc","tongsotien","shipestimate","shipthat","deleverynote","note","thanhtoan","OrderId","PaymentType","Amount","PayDate","Cashier","Created","CreatedBy","Modified","ModifiedBy","Note","OldId","getItemPayment","getallCustomer","ID","code","Code","CustomerName","CustomerPhone","CustomerAddress","Description","LoiChuc","PriceTotal","ShipEstimate","ShipThat","DeliveryNote","order_getByOrderId","then","payitem","res","customers_getall","saveOrder","newcustomer","Name","Phone","Address","customernewID","i","length","addCustomer","customer_add","responsecus","infoOrder","Number","newOrder","order_add","response","infoPayment","newPay","pay_add","responsez","console","log","catch","error","alert","updateOrder","OldInfoOrder","ToShow","order_update","updatePayItem","OldInfoPayment","pay_update","submit","event","preventDefault","root","padding","fontSize","marginTop","fontFamily","color","backgroundColor","borderRadius","height","paddingTop","styles","boxTitle","border","target","value","formControlLabel","width","style","marginRight","marginLeft","map","option","alignSelf","paddingLeft","textAlign","margin","states","label","inputRoot","paper","formControl","table","minWidth","textInput","autocomlete","createData","name","calories","fat","carbs","protein","rows","MAWB","className","rest","checked","setChecked","opendialog","setOpendialog","opensides","setopenside","list","anchor","fullList","values","setValues","firstName","lastName","email","phone","country","handleChangecheck","valuez","setValuez","propTypes","string","object"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Table,\n  Button,\n  TableBody,\n  TableCell,\n  TableContainer, TableHead, TableRow,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  Paper, Typography,\n  Drawer, FormControlLabel, MenuItem\n} from '@material-ui/core';\nimport moment from 'moment';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { LinkApi } from 'src/utils/api/api-link';\nimport { GET, POST } from 'src/utils/api/method';\nimport { InputLabelCustom } from 'src/components/custom/inputtxt';\nimport { useSelector, useDispatch, Provider } from \"react-redux\";\nimport { updateForm, updateDonHang, updatePay } from \"../../customer/AccountingView/reducersAndActions\";\nimport configureStore from \"../../customer/AccountingView/store\";\n\nconst store = configureStore();\n\nconst Form = ({ type, item }) => {\n  const classes = useStyles();\n\n  const { form } = useSelector(state => ({\n    ...state.reducer\n  }));\n  const { thongtindonhang } = useSelector(state => ({\n    ...state.reducer\n  }));\n\n  const { pay } = useSelector(state => ({\n    ...state.reducer\n  }));\n\n  const dispatch = useDispatch();\n  const change = useCallback(e => dispatch(updateDonHang(e)), [dispatch]);\n  const changePay = useCallback(e => dispatch(updatePay(e)), [dispatch]);\n  const [payItem, setpayitem] = useState([]);\n  const [hinhthucthanhtoan, sethinhthucthanhtoan] = useState('Tiền mặt');\n  const [hinhthucthanhtoanship, sethinhthucthanhtoanship] = useState('Tiền mặt');\n  const [customers, setcustomers] = useState([]);\n  const [orderdate, setorderdate] = useState(moment(new Date(), 'YYYY-MM-DD').format().substring(0, 10));\n\n  const httt=[{ key: 1, ht: \"Tiền mặt\"}, {key: 3, ht: 'Chuyển khoản'}]\n\n\n\n  useEffect(() => {  \n    if (type===\"newMAWB\") {\n      change({ \n        hoten: \"\",\n        sodienthoai: \"\",\n        diachi: \"\",\n        chitietdonhang: \"\",\n        loichuc:\"\",\n        tongsotien: \"\",\n        shipestimate: \"\",\n        shipthat: \"\",\n        deleverynote: \"\",\n        note: \"\",\n        thanhtoan: \"\",\n      });\n      changePay({ \n        OrderId: \"\",\n        PaymentType: \"\",\n        Amount: 0,\n        PayDate: \"\",\n        Cashier: \"\",\n        Created: \"\",\n        CreatedBy: \"\",\n        Modified: \"\",\n        ModifiedBy: \"\",\n        Note: \"\",\n        OldId: \"\"\n      });\n    }\n    else {\n      getItemPayment();  \n      getallCustomer();\n      change({ \n        ID:item.ID,\n        code:item.Code,\n        hoten: item.CustomerName,\n        sodienthoai: item.CustomerPhone,\n        diachi: item.CustomerAddress,\n        chitietdonhang: item.Description,\n        loichuc:item.LoiChuc,\n        tongsotien: item.PriceTotal,\n        shipestimate: item.ShipEstimate,\n        shipthat: item.ShipThat,\n        deleverynote: item.DeliveryNote,\n        note: item.Note,\n        thanhtoan: \"\",\n      }); \n    }\n  }, []);\n\n  const getItemPayment = async () => {\n    await GET(LinkApi.order_getByOrderId+item.ID)\n      .then(payitem => {\n        setpayitem(payitem);\n       // console.log(payitem)\n       // console.log(payItem)\n        changePay({ \n          ID:payitem.ID,\n          OrderId: payitem.OrderId,\n          PaymentType: payitem.PaymentType,\n          Amount: payitem.Amount,\n          PayDate: payitem.PayDate,\n          Cashier: payitem.Cashier,\n          Created: payitem.Created,\n          CreatedBy: payitem.CreatedBy,\n          Modified: payitem.Modified,\n          ModifiedBy: payitem.ModifiedBy,\n          Note: payitem.Note,\n          OldId: payitem.OldId\n        });        \n        //console.log(\"payitem: \", pay) \n      });\n    //  \n  }    \n\n  const getallCustomer = async () => {\n    let res=await GET(LinkApi.customers_getall)\n    //console.log(res); \n    if (res!==null) {\n      setcustomers(res)\n    }\n};\n\n  const saveOrder = async () => {\n    const newcustomer ={\n      Code:'',\n      Name:thongtindonhang.hoten,\n      Phone:thongtindonhang.sodienthoai,\n      Address: thongtindonhang.diachi,\n    }\n    let customernewID=null;\n    for (let i=0; i< customers.length; i++) {\n      if (newcustomer.Phone=== customers[i].Phone) {\n        customernewID = customers[i].ID;\n      }\n    }\n    \n    let addCustomer= await POST(LinkApi.customer_add, newcustomer)\n    .then(responsecus => {\n     \n    //console.log(newOrder)\n    })\n    //console.log(infoOrder)\n    const infoOrder={\n      \"Code\": \"TOBI\"+moment(new Date(), 'DD-MM-YYYY').format().substring(0, 19),\n      \"ToShow\":0,\n      \"CustomerId\": 1,\n      \"CustomerName\": thongtindonhang.hoten,\n      \"CustomerPhone\": thongtindonhang.sodienthoai,\n      \"CustomerAddress\": thongtindonhang.diachi,\n      \"UserId\": 1,\n      \"Description\": thongtindonhang.chitietdonhang,\n      \"LoiChuc\": thongtindonhang.loichuc,\n      \"PriceTotal\": thongtindonhang.tongsotien,\n      \"IsConNo\": Number(thongtindonhang.tongsotien)<=Number(pay.Amount)?'0':'1',\n      \"ShipEstimate\": thongtindonhang.shipestimate,\n      \"ShipThat\": thongtindonhang.shipthat,\n      \"DeliveryNote\": thongtindonhang.deleverynote,\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)+\" \"+ moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      //\"Created\": orderdate,\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": thongtindonhang.note,\n      };\n  let newOrder= await POST(LinkApi.order_add, infoOrder)\n  .then(response => {\n    const infoPayment={\n      \"OrderId\": response.ID,\n      \"PaymentType\": pay.PaymentType==='Tiền mặt' ? 1 : 0,\n      \"Amount\": pay.Amount,\n      \"PayDate\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)+\" \"+ moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"Cashier\": \"Bưởi\",\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)+\" \"+ moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": pay.note,\n      \"OldId\": \"\"\n      };\n      let newPay= POST(LinkApi.pay_add, infoPayment)\n    .then(responsez => console.log(responsez))\n    .catch(error => alert('error', error))\n  })\n  .catch(error => alert('error', error))\n  };\n\n  const updateOrder = async () => {\n    const OldInfoOrder= item;\n    OldInfoOrder.ToShow=1;\n    await POST(LinkApi.order_update, OldInfoOrder); //update ToShow cua ban ghi cu thanh 1 de ko view ra\n    const infoOrder={\n      //\"ID\":thongtindonhang.ID,\n      \"ToShow\":0,\n      \"Code\": thongtindonhang.code,\n      //\"CustomerId\": 1,\n      \"CustomerName\": thongtindonhang.hoten,\n      \"CustomerPhone\": thongtindonhang.sodienthoai,\n      \"CustomerAddress\": thongtindonhang.diachi,\n      \"UserId\": 1,\n      \"Description\": thongtindonhang.chitietdonhang,\n      \"LoiChuc\": thongtindonhang.loichuc,\n      \"PriceTotal\": thongtindonhang.tongsotien,\n      \"IsConNo\": thongtindonhang.tongsotien===pay.Amount?'1':'0',\n      \"ShipEstimate\": thongtindonhang.shipestimate,\n      \"ShipThat\": thongtindonhang.shipthat,\n      \"DeliveryNote\": thongtindonhang.deleverynote,\n      //\"Created\": orderdate,\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)+\" \"+ moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": thongtindonhang.note,\n      \"OldId\":thongtindonhang.ID,\n      };\n      let newOrder= await POST(LinkApi.order_add, infoOrder) //add order mới và update ID vào bảng pay\n      .then(response => { \n        updatePayItem(response);     \n      })\n      .catch(error => console.log('error2', error))      \n  };\n\n  const updatePayItem = async (response) => {\n    const OldInfoPayment= payItem;\n    OldInfoPayment.OrderId =response.ID;\n    OldInfoPayment.OldId =payItem.ID;\n    \n      console.log(OldInfoPayment)\n    await POST(LinkApi.pay_update, OldInfoPayment)\n    .then(responsez => console.log('responsez', responsez))\n    .catch(error => console.log('error1', error));\n\n    const infoPayment={\n      \"OrderId\": response.ID,\n      \"PaymentType\": pay.PaymentType,\n      \"Amount\": pay.Amount,\n      \"PayDate\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)+\" \"+ moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"Cashier\": \"Bưởi\",\n      \"Created\": moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)+\" \"+ moment(new Date(), 'DD-MM-YYYY').format().substring(11, 19),\n      \"CreatedBy\": 1,\n      \"Modified\": null,\n      \"ModifiedBy\": 0,\n      \"Note\": pay.note,\n      \"OldId\": \"\"\n      };  \n  }\n  const submit = event => {\n    event.preventDefault();\n    console.log(\"SUBMIT\", event);\n  };\n  \n  return (\n    <form \n      autoComplete=\"off\"\n      onSubmit={submit}\n      className={classes.root} \n      style={{ padding: 10 }}>\n      {\n      type===\"editMAWB\"\n        ?<h5 style={{ fontSize: 16, marginTop: 10, fontFamily: 'sans-serif', color: 'white', backgroundColor: '#3f51b5', padding: 15 }}>Sửa đơn hàng</h5>\n        :<h5 style={{ fontSize: 16, marginTop: 10, fontFamily: 'sans-serif', color: 'white', backgroundColor: '#3f51b5', padding: 15 }}>Tạo đơn hàng mới</h5>\n      }\n      <Divider style={{ fontSize: 16, marginTop: 10, color: 'black' }} />\n      <Grid container spacing={1} justify=\"center\" alignItems=\"center\">        \n        <Grid item xs={6} style={{ backgroundColor: '', borderRadius: 4 }}>        \n          <Grid item xs={12} style={{ height: 250, backgroundColor: '', paddingTop: 10, borderRadius: 4 }}>\n            <h5 style={styles.boxTitle}>Thông tin khách hàng</h5>\n            <Grid item xs={12} style={{ border: '1px solid grey', padding: 1, backgroundColor: 'white', height: 220, borderRadius: 4 }}>\n              <InputLabelCustom label={'Họ tên'} value={thongtindonhang.hoten} onChange={e => change({ hoten: e.target.value })} \n                customstyle={null} multiline={false} rowsMax={1} />              \n              <InputLabelCustom label={'Số điện thoại'} value={thongtindonhang.sodienthoai} onChange={e => change({ sodienthoai: e.target.value })} \n                customstyle={null} multiline={false} rowsMax={1} />\n              <InputLabelCustom label={'Địa chỉ'} value={thongtindonhang.diachi} onChange={e => change({ diachi: e.target.value })} \n                customstyle={null} multiline={true} rowsMax={2} />\n              <InputLabelCustom label={'Lời chúc'} value={thongtindonhang.loichuc} onChange={e => change({ loichuc: e.target.value })} \n                customstyle={null} multiline={false} rowsMax={1} />           \n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={6} style={{ backgroundColor: '', borderRadius: 4 }}>    \n          <Grid item xs={12} style={{ height: 250, backgroundColor: '', paddingTop: 10, borderRadius: 4 }}>\n            <h5 style={styles.boxTitle}>Thanh toán</h5>\n            <Grid item xs={12} style={{ border: '1px solid grey', padding: 1, backgroundColor: 'white', height: 220, borderRadius: 4 }}>\n              <FormControlLabel\n                fullWidth\n                //className={classes.formControl}\n                label={<Typography className={classes.formControlLabel}>{'Phí ship thu khách'}</Typography>}\n                style={{ backgroundColor: ''}}\n                labelPlacement=\"start\"\n                control={(\n                  <TextField\n                    size=\"small\"\n                    type={'number'}\n                    autoComplete=\"off\"\n                    style={{width: 440}}\n                    InputProps={{ style: { fontSize: 13, marginRight: 30, marginLeft: 10 } }}\n                    name=\"country\"\n                    onChange={e => change({ shipestimate: e.target.value })} \n                    required\n                    value={thongtindonhang.shipestimate}\n                    variant=\"outlined\"     \n                  />\n                )}\n              />  \n              <InputLabelCustom label={'Phí ship thực tế'} value={thongtindonhang.shipthat} onChange={e => change({ shipthat: e.target.value })} \n                customstyle={null} multiline={false} rowsMax={1} type=\"number\" />              \n              <InputLabelCustom label={'Thành tiền'} value={thongtindonhang.tongsotien} onChange={e => change({ tongsotien: e.target.value })} \n                customstyle={null} multiline={false} rowsMax={1} type=\"number\" />\n              {type===\"newMAWB\"\n              ?(\n                <div>\n                  <FormControlLabel\n                    fullWidth\n                    //className={classes.formControl}\n                    label={<Typography className={classes.formControlLabel}>{'Thanh toán'}</Typography>}\n                    style={{ backgroundColor: ''}}\n                    labelPlacement=\"start\"\n                    control={(\n                      <TextField\n                        size=\"small\"\n                        type={'number'}\n                        style={{width: 200}}\n                        InputProps={{ style: { fontSize: 13, marginRight: 30, marginLeft: 10 } }}\n                        name=\"country\"\n                        onChange={e => changePay({ Amount: e.target.value })} \n                        required\n                        value={pay.Amount}\n                        variant=\"outlined\"     \n                      />\n                    )}\n                  />          \n                  <TextField\n                    select\n                    size=\"small\"\n                    InputProps={{ style: { fontSize: 14, backgroundColor: 'white' } }}\n                    style={{ width: 150, marginLeft: 10, fontSize: 14, backgroundColor: 'white' }}\n                    //value={httt}\n                    value={pay.PaymentType}\n                    onChange={e => changePay({ PaymentType: e.target.value })} \n                    variant=\"outlined\"\n                  >\n                    {httt.map((option) => (\n                      <MenuItem key={option.key} value={option.ht}>\n                        {option.ht}\n                      </MenuItem>\n                    ))}\n                  </TextField> \n                  <Typography\n                    style={{ fontSize: 12, marginLeft: 18, marginTop: 10 }}\n                    color=\"textPrimary\"\n                    variant=\"body1\"\n                  >\n                    Khách nợ:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{thongtindonhang.tongsotien-pay.Amount} đ\n                  </Typography>\n                </div>\n              )\n              :\n              (\n                <div>&nbsp;</div>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ backgroundColor: '', borderRadius: 4 }}> \n          <Grid item xs={12} style={{ height: 260, backgroundColor: '', paddingTop: 10, borderRadius: 4 }}>\n            <h5 style={styles.boxTitle}>Yêu cầu chi tiết</h5>\n            <Grid item xs={12} style={{ border: '1px solid grey', padding: 1, backgroundColor: 'white', height:240, borderRadius: 4 }}>\n              <InputLabelCustom label={'Yêu cầu giao hàng'} value={thongtindonhang.deleverynote} onChange={e => change({ deleverynote: e.target.value })} \n                customstyle={{marginLeft: 40}} multiline={false} rowsMax={1} />           \n              <InputLabelCustom label={'Ngày xuất hàng'} value={thongtindonhang.note} onChange={e => change({ note: e.target.value })} \n                customstyle={{marginLeft: 40}} multiline={false} rowsMax={1} type={'date'} />  \n               \n              <FormControlLabel\n                fullWidth\n                //className={classes.formControl}\n                label={<Typography style={{ marginLeft: 10, width: 150, fontFamily: 'sans-serif', fontSize: 12, alignSelf: \"flex-start\", paddingLeft: 0, textAlign: 'start', }}>Mô tả sản phẩm</Typography>}\n                style={{ margin: 5, }}\n                labelPlacement=\"start\"\n                control={(\n                  <TextField\n                    fullWidth\n                    size=\"small\"\n                    InputProps={{ style: { fontSize: 14 } }}\n                    style={{ width: 800 }}\n                    // helperText=\"Please specify the first name\"\n                    name=\"firstName\"\n                    required\n                    value={thongtindonhang.chitietdonhang} \n                    onChange={e => change({ chitietdonhang: e.target.value })} \n                    variant=\"outlined\"\n                    multiline\n                    rows={8}\n                  />\n                )}\n              />\n            </Grid>            \n          </Grid> \n        </Grid>\n        {type===\"newMAWB\" \n        ?(<Button color=\"secondary\" style={{ marginTop: 10, color: 'white', backgroundColor: '#3f51b5', padding: 10 }} onClick={saveOrder}>SAVEq</Button>)\n        :(<Button color=\"secondary\" style={{ marginTop: 10, color: 'white', backgroundColor: '#3f51b5', padding: 10 }} onClick={updateOrder}>UPDATE</Button>)}\n      </Grid>\n    </form>    \n  );\n};\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: { \n    width: 1150,\n    backgroundColor: 'rgb(240, 240, 240)',\n  },\n  inputRoot: {\n    color: 'green',\n    fontSize: 12,\n    height: 120\n  },\n  paper: {\n    padding: 2,\n    textAlign: 'center',\n    color: 'gray',\n  },\n  formControlLabel: {\n    width: 110,\n    fontFamily: 'sans-serif',\n    fontSize: 12,\n    alignSelf: \"flex-end\",\n    paddingLeft: 0,\n    textAlign: 'start',\n    backgroundColor: ''\n  },\n  formControl: {\n    width: 530,\n    margin: 5,\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    alignSelf: \"center\",\n    backgroundColor: ''\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nconst styles = {\n  textInput: {\n    width: 450,\n    marginLeft: 10\n  },\n  boxTitle: {\n    fontSize: 16,\n    marginTop: 0,\n    color: 'green'\n  },\n  autocomlete: {\n    marginLeft: 10,\n    width: 400,\n    backgroundColor: ''\n  },\n};\n\n\n\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst MAWB = ({ className, type, item, ...rest }) => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n  const [opendialog, setOpendialog] = React.useState(false);\n  const [opensides, setopenside] = useState(false);\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n   //   onClick={setopenside(false)}\n   //   onKeyDown={setopenside(false)}\n    >\n      <h1>kkk</h1>\n    </div>\n  );\n\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n  // alert(item.customerId);\n\n  const handleChangecheck = (event) => {\n    setChecked(!checked);\n  };\n\n\n  const [valuez, setValuez] = useState(\"\");\n\n  return (\n    <Provider store={store}>\n      <Form type={type} item={item} />\n    </Provider>\n  );\n};\n\nMAWB.propTypes = {\n  className: PropTypes.string,\n  type: PropTypes.string,\n  item: PropTypes.object\n};\n\nexport default MAWB;\n"]},"metadata":{},"sourceType":"module"}