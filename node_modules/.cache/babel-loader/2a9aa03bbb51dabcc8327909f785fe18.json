{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\Bakery_ReactjsSourceCode\\\\src\\\\views\\\\reports\\\\DashboardView\\\\LatestOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, CardHeader, Chip, Divider, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, Tooltip, makeStyles } from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [orders] = useState([]);\n  const [thungan, setthungan] = useState('');\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    makeRemoteRequest();\n  }, []);\n\n  const makeRemoteRequest = async () => {\n    let res = await GET(LinkApi.order_getBydate + moment(new Date(), 'YYYY-MM-DD').format().substring(0, 10)); //console.log(res); \n\n    if (res !== null) {\n      setData(res); // setLoading(false);\n      //setRefreshing(false);\n      //setData(page === 1 ? res : [...data, ...res]);\n      //setpagesize(res.length)}else{\n      //setLoading(false)\n    }\n    /*setLoading(true)\n    const staffId =await AsyncStorage.getItem('staffId')\n     var url=''\n    if(type==='totrinhnhan'){\n      url = urlAPI.totrinhNhanGetallPaging + `key=&status=-1&staffid=${staffId}&xem=-1&page=${page}&size=30`\n    }if(type==='totrinhgui'){\n       url = urlAPI.totrinhGuiGetallPaging + `key=&status=-1&staffid=${staffId}&xem=-1&page=${page}&size=30`\n    }\n    let hh =POST('http://103.114.104.246:8080/api-cargo-cs/api/login', \n    {\n      userName:\"admin\",\n      password:\"12345\"\n    })\n    const url = LinkApi.order_getall; \n    await fetch(url)\n        .then(res => res.json()) \n        .then(res => {\n         console.log(res);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n     /*if (res!==null) {\n      setLoading(false);\n      setRefreshing(false);\n      setData(page === 1 ? res : [...data, ...res]);\n      setpagesize(res.length)}else{\n      setLoading(false)\n    }\n    //\n     \n    /*  const url = `https://5f8abf3a84531500167061c7.mockapi.io/api/vbd/trichYeu?page=${page}&limit=1`;\n    setLoading(true);\n    // fetch(props.url)\n    fetch(url)\n        .then(res => res.json())\n        .then(res => {\n         // alert(res.length)\n          setLoading(false);\n          setRefreshing(false);\n          setError(res.error || null);\n          setData( page === 1 ? res : [...data, ...res]);\n          setpagesize(res.length)\n            //alert(data)\n        })\n        .catch(error => {\n           setLoading(false)\n        });*/\n\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"\\u0110\\u01A1n h\\xE0ng trong ng\\xE0y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"\\u0110\\u01A1n h\\xE0ng\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Kh\\xE1ch h\\xE0ng\"), /*#__PURE__*/React.createElement(TableCell, {\n    sortDirection: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    enterDelay: 300,\n    title: \"Sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: true,\n    direction: \"desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Gi\\xE1\"))), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"T\\xECnh tr\\u1EA1ng\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, data.map(order => /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    key: order.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, order.ID), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, order.CustomerName), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, order.PriceTotal), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, order.IsConNo === 1 ? 'Chưa thanh toán' : 'Đã thanh toán'))))))));\n};\n\n_s(LatestOrders, \"iN5OewJa+8zcU3CmhbRzk7rXYxs=\", false, function () {\n  return [useStyles];\n});\n\n_c = LatestOrders;\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\nexport default LatestOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestOrders\");","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/views/reports/DashboardView/LatestOrders.js"],"names":["React","useState","useEffect","clsx","moment","v4","uuid","PerfectScrollbar","PropTypes","Box","Button","Card","CardHeader","Chip","Divider","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","makeStyles","ArrowRightIcon","GET","LinkApi","useStyles","root","actions","justifyContent","LatestOrders","className","rest","classes","orders","thungan","setthungan","data","setData","makeRemoteRequest","res","order_getBydate","Date","format","substring","map","order","id","ID","CustomerName","PriceTotal","IsConNo","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState([]);\n  const [thungan, setthungan] = useState('');\n  const [data, setData] = useState([]);\n\n  useEffect(() => {    \n    makeRemoteRequest();\n  }, []); \n  const makeRemoteRequest = async () => {\n    let res=await GET(LinkApi.order_getBydate + moment(new Date(), 'YYYY-MM-DD').format().substring(0, 10))\n    //console.log(res); \n    if (res!==null) {\n      setData(res)\n     // setLoading(false);\n      //setRefreshing(false);\n      //setData(page === 1 ? res : [...data, ...res]);\n      //setpagesize(res.length)}else{\n      //setLoading(false)\n    }\n    /*setLoading(true)\n    const staffId =await AsyncStorage.getItem('staffId')\n     var url=''\n    if(type==='totrinhnhan'){\n      url = urlAPI.totrinhNhanGetallPaging + `key=&status=-1&staffid=${staffId}&xem=-1&page=${page}&size=30`\n    }if(type==='totrinhgui'){\n       url = urlAPI.totrinhGuiGetallPaging + `key=&status=-1&staffid=${staffId}&xem=-1&page=${page}&size=30`\n    }\n  let hh =POST('http://103.114.104.246:8080/api-cargo-cs/api/login', \n    {\n      userName:\"admin\",\n      password:\"12345\"\n    })\n    const url = LinkApi.order_getall; \n    await fetch(url)\n        .then(res => res.json()) \n        .then(res => {\n         console.log(res);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n\n    /*if (res!==null) {\n      setLoading(false);\n      setRefreshing(false);\n      setData(page === 1 ? res : [...data, ...res]);\n      setpagesize(res.length)}else{\n      setLoading(false)\n    }\n    //\n\n    \n  /*  const url = `https://5f8abf3a84531500167061c7.mockapi.io/api/vbd/trichYeu?page=${page}&limit=1`;\n    setLoading(true);\n   // fetch(props.url)\n    fetch(url)\n        .then(res => res.json())\n        .then(res => {\n         // alert(res.length)\n          setLoading(false);\n          setRefreshing(false);\n          setError(res.error || null);\n          setData( page === 1 ? res : [...data, ...res]);\n          setpagesize(res.length)\n            //alert(data)\n        })\n        .catch(error => {\n           setLoading(false)\n        });*/\n};\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Đơn hàng trong ngày\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Đơn hàng\n                </TableCell>\n                <TableCell>\n                  Khách hàng\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Giá\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Tình trạng\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ID}\n                  </TableCell>\n                  <TableCell>\n                    {order.CustomerName}\n                  </TableCell>\n                  <TableCell>\n                    {order.PriceTotal}\n                  </TableCell>\n                  <TableCell>\n                    {order.IsConNo===1?'Chưa thanh toán':'Đã thanh toán'}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n"]},"metadata":{},"sourceType":"module"}