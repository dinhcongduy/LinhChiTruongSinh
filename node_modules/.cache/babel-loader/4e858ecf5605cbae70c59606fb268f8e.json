{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _decimaln = _interopRequireDefault(require(\"./decimaln\"));\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst Decimal = {\n  id: 0x37,\n  type: 'DECIMAL',\n  name: 'Decimal',\n  declaration: function (parameter) {\n    return 'decimal(' + this.resolvePrecision(parameter) + ', ' + this.resolveScale(parameter) + ')';\n  },\n  resolvePrecision: function (parameter) {\n    if (parameter.precision != null) {\n      return parameter.precision;\n    } else if (parameter.value === null) {\n      return 1;\n    } else {\n      return 18;\n    }\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else {\n      return 0;\n    }\n  },\n\n  generateTypeInfo(parameter, _options) {\n    let precision;\n\n    if (parameter.precision <= 9) {\n      precision = 0x05;\n    } else if (parameter.precision <= 19) {\n      precision = 0x09;\n    } else if (parameter.precision <= 28) {\n      precision = 0x0D;\n    } else {\n      precision = 0x11;\n    }\n\n    return Buffer.from([_decimaln.default.id, precision, parameter.precision, parameter.scale]);\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value != null) {\n      const sign = parameter.value < 0 ? 0 : 1;\n      const value = Math.round(Math.abs(parameter.value * Math.pow(10, parameter.scale)));\n\n      if (parameter.precision <= 9) {\n        const buffer = Buffer.alloc(6);\n        let offset = 0;\n        offset = buffer.writeUInt8(5, offset);\n        offset = buffer.writeUInt8(sign, offset);\n        buffer.writeUInt32LE(value, offset);\n        yield buffer;\n      } else if (parameter.precision <= 19) {\n        const buffer = new _writableTrackingBuffer.default(10);\n        buffer.writeUInt8(9);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        yield buffer.data;\n      } else if (parameter.precision <= 28) {\n        const buffer = new _writableTrackingBuffer.default(14);\n        buffer.writeUInt8(13);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n        yield buffer.data;\n      } else {\n        const buffer = new _writableTrackingBuffer.default(18);\n        buffer.writeUInt8(17);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n        buffer.writeUInt32LE(0x00000000);\n        yield buffer.data;\n      }\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    return value;\n  }\n};\nvar _default = Decimal;\nexports.default = _default;\nmodule.exports = Decimal;","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/decimal.js"],"names":["Object","defineProperty","exports","value","default","_decimaln","_interopRequireDefault","require","_writableTrackingBuffer","obj","__esModule","Decimal","id","type","name","declaration","parameter","resolvePrecision","resolveScale","precision","scale","generateTypeInfo","_options","Buffer","from","generateParameterData","options","sign","Math","round","abs","pow","buffer","alloc","offset","writeUInt8","writeUInt32LE","writeUInt64LE","data","validate","parseFloat","isNaN","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,IAAIC,uBAAuB,GAAGF,sBAAsB,CAACC,OAAO,CAAC,6CAAD,CAAR,CAApD;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,MAAME,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE,IADU;AAEdC,EAAAA,IAAI,EAAE,SAFQ;AAGdC,EAAAA,IAAI,EAAE,SAHQ;AAIdC,EAAAA,WAAW,EAAE,UAAUC,SAAV,EAAqB;AAChC,WAAO,aAAa,KAAKC,gBAAL,CAAsBD,SAAtB,CAAb,GAAgD,IAAhD,GAAuD,KAAKE,YAAL,CAAkBF,SAAlB,CAAvD,GAAsF,GAA7F;AACD,GANa;AAOdC,EAAAA,gBAAgB,EAAE,UAAUD,SAAV,EAAqB;AACrC,QAAIA,SAAS,CAACG,SAAV,IAAuB,IAA3B,EAAiC;AAC/B,aAAOH,SAAS,CAACG,SAAjB;AACD,KAFD,MAEO,IAAIH,SAAS,CAACb,KAAV,KAAoB,IAAxB,EAA8B;AACnC,aAAO,CAAP;AACD,KAFM,MAEA;AACL,aAAO,EAAP;AACD;AACF,GAfa;AAgBde,EAAAA,YAAY,EAAE,UAAUF,SAAV,EAAqB;AACjC,QAAIA,SAAS,CAACI,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,aAAOJ,SAAS,CAACI,KAAjB;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF,GAtBa;;AAwBdC,EAAAA,gBAAgB,CAACL,SAAD,EAAYM,QAAZ,EAAsB;AACpC,QAAIH,SAAJ;;AAEA,QAAIH,SAAS,CAACG,SAAV,IAAuB,CAA3B,EAA8B;AAC5BA,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD,MAEO,IAAIH,SAAS,CAACG,SAAV,IAAuB,EAA3B,EAA+B;AACpCA,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFM,MAEA,IAAIH,SAAS,CAACG,SAAV,IAAuB,EAA3B,EAA+B;AACpCA,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFM,MAEA;AACLA,MAAAA,SAAS,GAAG,IAAZ;AACD;;AAED,WAAOI,MAAM,CAACC,IAAP,CAAY,CAACnB,SAAS,CAACD,OAAV,CAAkBQ,EAAnB,EAAuBO,SAAvB,EAAkCH,SAAS,CAACG,SAA5C,EAAuDH,SAAS,CAACI,KAAjE,CAAZ,CAAP;AACD,GAtCa;;AAwCd,GAACK,qBAAD,CAAuBT,SAAvB,EAAkCU,OAAlC,EAA2C;AACzC,QAAIV,SAAS,CAACb,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,YAAMwB,IAAI,GAAGX,SAAS,CAACb,KAAV,GAAkB,CAAlB,GAAsB,CAAtB,GAA0B,CAAvC;AACA,YAAMA,KAAK,GAAGyB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASd,SAAS,CAACb,KAAV,GAAkByB,IAAI,CAACG,GAAL,CAAS,EAAT,EAAaf,SAAS,CAACI,KAAvB,CAA3B,CAAX,CAAd;;AAEA,UAAIJ,SAAS,CAACG,SAAV,IAAuB,CAA3B,EAA8B;AAC5B,cAAMa,MAAM,GAAGT,MAAM,CAACU,KAAP,CAAa,CAAb,CAAf;AACA,YAAIC,MAAM,GAAG,CAAb;AACAA,QAAAA,MAAM,GAAGF,MAAM,CAACG,UAAP,CAAkB,CAAlB,EAAqBD,MAArB,CAAT;AACAA,QAAAA,MAAM,GAAGF,MAAM,CAACG,UAAP,CAAkBR,IAAlB,EAAwBO,MAAxB,CAAT;AACAF,QAAAA,MAAM,CAACI,aAAP,CAAqBjC,KAArB,EAA4B+B,MAA5B;AACA,cAAMF,MAAN;AACD,OAPD,MAOO,IAAIhB,SAAS,CAACG,SAAV,IAAuB,EAA3B,EAA+B;AACpC,cAAMa,MAAM,GAAG,IAAIxB,uBAAuB,CAACJ,OAA5B,CAAoC,EAApC,CAAf;AACA4B,QAAAA,MAAM,CAACG,UAAP,CAAkB,CAAlB;AACAH,QAAAA,MAAM,CAACG,UAAP,CAAkBR,IAAlB;AACAK,QAAAA,MAAM,CAACK,aAAP,CAAqBlC,KAArB;AACA,cAAM6B,MAAM,CAACM,IAAb;AACD,OANM,MAMA,IAAItB,SAAS,CAACG,SAAV,IAAuB,EAA3B,EAA+B;AACpC,cAAMa,MAAM,GAAG,IAAIxB,uBAAuB,CAACJ,OAA5B,CAAoC,EAApC,CAAf;AACA4B,QAAAA,MAAM,CAACG,UAAP,CAAkB,EAAlB;AACAH,QAAAA,MAAM,CAACG,UAAP,CAAkBR,IAAlB;AACAK,QAAAA,MAAM,CAACK,aAAP,CAAqBlC,KAArB;AACA6B,QAAAA,MAAM,CAACI,aAAP,CAAqB,UAArB;AACA,cAAMJ,MAAM,CAACM,IAAb;AACD,OAPM,MAOA;AACL,cAAMN,MAAM,GAAG,IAAIxB,uBAAuB,CAACJ,OAA5B,CAAoC,EAApC,CAAf;AACA4B,QAAAA,MAAM,CAACG,UAAP,CAAkB,EAAlB;AACAH,QAAAA,MAAM,CAACG,UAAP,CAAkBR,IAAlB;AACAK,QAAAA,MAAM,CAACK,aAAP,CAAqBlC,KAArB;AACA6B,QAAAA,MAAM,CAACI,aAAP,CAAqB,UAArB;AACAJ,QAAAA,MAAM,CAACI,aAAP,CAAqB,UAArB;AACA,cAAMJ,MAAM,CAACM,IAAb;AACD;AACF,KAjCD,MAiCO;AACL,YAAMf,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAN;AACD;AACF,GA7Ea;;AA+Ede,EAAAA,QAAQ,EAAE,UAAUpC,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAEDA,IAAAA,KAAK,GAAGqC,UAAU,CAACrC,KAAD,CAAlB;;AAEA,QAAIsC,KAAK,CAACtC,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIuC,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,WAAOvC,KAAP;AACD;AA3Fa,CAAhB;AA6FA,IAAIwC,QAAQ,GAAGhC,OAAf;AACAT,OAAO,CAACE,OAAR,GAAkBuC,QAAlB;AACAC,MAAM,CAAC1C,OAAP,GAAiBS,OAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _decimaln = _interopRequireDefault(require(\"./decimaln\"));\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Decimal = {\n  id: 0x37,\n  type: 'DECIMAL',\n  name: 'Decimal',\n  declaration: function (parameter) {\n    return 'decimal(' + this.resolvePrecision(parameter) + ', ' + this.resolveScale(parameter) + ')';\n  },\n  resolvePrecision: function (parameter) {\n    if (parameter.precision != null) {\n      return parameter.precision;\n    } else if (parameter.value === null) {\n      return 1;\n    } else {\n      return 18;\n    }\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else {\n      return 0;\n    }\n  },\n\n  generateTypeInfo(parameter, _options) {\n    let precision;\n\n    if (parameter.precision <= 9) {\n      precision = 0x05;\n    } else if (parameter.precision <= 19) {\n      precision = 0x09;\n    } else if (parameter.precision <= 28) {\n      precision = 0x0D;\n    } else {\n      precision = 0x11;\n    }\n\n    return Buffer.from([_decimaln.default.id, precision, parameter.precision, parameter.scale]);\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value != null) {\n      const sign = parameter.value < 0 ? 0 : 1;\n      const value = Math.round(Math.abs(parameter.value * Math.pow(10, parameter.scale)));\n\n      if (parameter.precision <= 9) {\n        const buffer = Buffer.alloc(6);\n        let offset = 0;\n        offset = buffer.writeUInt8(5, offset);\n        offset = buffer.writeUInt8(sign, offset);\n        buffer.writeUInt32LE(value, offset);\n        yield buffer;\n      } else if (parameter.precision <= 19) {\n        const buffer = new _writableTrackingBuffer.default(10);\n        buffer.writeUInt8(9);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        yield buffer.data;\n      } else if (parameter.precision <= 28) {\n        const buffer = new _writableTrackingBuffer.default(14);\n        buffer.writeUInt8(13);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n        yield buffer.data;\n      } else {\n        const buffer = new _writableTrackingBuffer.default(18);\n        buffer.writeUInt8(17);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n        buffer.writeUInt32LE(0x00000000);\n        yield buffer.data;\n      }\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    return value;\n  }\n};\nvar _default = Decimal;\nexports.default = _default;\nmodule.exports = Decimal;"]},"metadata":{},"sourceType":"script"}