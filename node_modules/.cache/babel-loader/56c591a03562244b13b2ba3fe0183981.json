{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _intn = _interopRequireDefault(require(\"./intn\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar SmallInt = {\n  id: 0x34,\n  type: 'INT2',\n  name: 'SmallInt',\n  declaration: function declaration() {\n    return 'smallint';\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([_intn.default.id, 0x02]);\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var buffer;\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(parameter.value != null)) {\n              _context.next = 8;\n              break;\n            }\n\n            buffer = Buffer.alloc(3);\n            buffer.writeUInt8(2, 0);\n            buffer.writeInt16LE(Number(parameter.value), 1);\n            _context.next = 6;\n            return buffer;\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.next = 10;\n            return Buffer.from([0x00]);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -32768 || value > 32767) {\n      return new TypeError('Value must be between -32768 and 32767, inclusive.');\n    }\n\n    return value | 0;\n  }\n};\nvar _default = SmallInt;\nexports.default = _default;\nmodule.exports = SmallInt;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/smallint.js"],"names":["Object","defineProperty","exports","value","default","_intn","_interopRequireDefault","require","obj","__esModule","SmallInt","id","type","name","declaration","generateTypeInfo","Buffer","from","generateParameterData","parameter","options","buffer","alloc","writeUInt8","writeInt16LE","Number","validate","isNaN","TypeError","_default","module"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,IAAME,QAAQ,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,IAAI,EAAE,MAFS;AAGfC,EAAAA,IAAI,EAAE,UAHS;AAIfC,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,UAAP;AACD,GANc;AAQfC,EAAAA,gBARe,8BAQI;AACjB,WAAOC,MAAM,CAACC,IAAP,CAAY,CAACZ,KAAK,CAACD,OAAN,CAAcO,EAAf,EAAmB,IAAnB,CAAZ,CAAP;AACD,GAVc;AAYfO,EAAAA,qBAAqB,wCAAE,+BAAWC,SAAX,EAAsBC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACjBD,SAAS,CAAChB,KAAV,IAAmB,IADF;AAAA;AAAA;AAAA;;AAEbkB,YAAAA,MAFa,GAEJL,MAAM,CAACM,KAAP,CAAa,CAAb,CAFI;AAGnBD,YAAAA,MAAM,CAACE,UAAP,CAAkB,CAAlB,EAAqB,CAArB;AACAF,YAAAA,MAAM,CAACG,YAAP,CAAoBC,MAAM,CAACN,SAAS,CAAChB,KAAX,CAA1B,EAA6C,CAA7C;AAJmB;AAKnB,mBAAMkB,MAAN;;AALmB;AAAA;AAAA;;AAAA;AAAA;AAOnB,mBAAML,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAN;;AAPmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,CAZN;AAsBfS,EAAAA,QAAQ,EAAE,kBAAUvB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,MAAAA,KAAK,GAAGsB,MAAM,CAACtB,KAAD,CAAd;AACD;;AAED,QAAIwB,KAAK,CAACxB,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIyB,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,QAAIzB,KAAK,GAAG,CAAC,KAAT,IAAkBA,KAAK,GAAG,KAA9B,EAAqC;AACnC,aAAO,IAAIyB,SAAJ,CAAc,oDAAd,CAAP;AACD;;AAED,WAAOzB,KAAK,GAAG,CAAf;AACD;AAxCc,CAAjB;AA0CA,IAAI0B,QAAQ,GAAGnB,QAAf;AACAR,OAAO,CAACE,OAAR,GAAkByB,QAAlB;AACAC,MAAM,CAAC5B,OAAP,GAAiBQ,QAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _intn = _interopRequireDefault(require(\"./intn\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SmallInt = {\n  id: 0x34,\n  type: 'INT2',\n  name: 'SmallInt',\n  declaration: function () {\n    return 'smallint';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([_intn.default.id, 0x02]);\n  },\n\n  generateParameterData: function* (parameter, options) {\n    if (parameter.value != null) {\n      const buffer = Buffer.alloc(3);\n      buffer.writeUInt8(2, 0);\n      buffer.writeInt16LE(Number(parameter.value), 1);\n      yield buffer;\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'number') {\n      value = Number(value);\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -32768 || value > 32767) {\n      return new TypeError('Value must be between -32768 and 32767, inclusive.');\n    }\n\n    return value | 0;\n  }\n};\nvar _default = SmallInt;\nexports.default = _default;\nmodule.exports = SmallInt;"]},"metadata":{},"sourceType":"script"}