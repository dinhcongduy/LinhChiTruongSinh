{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\n\nvar _core = require(\"@js-joda/core\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar EPOCH_DATE = _core.LocalDate.ofYearDay(1900, 1);\n\nvar DateTime = {\n  id: 0x3D,\n  type: 'DATETIME',\n  name: 'DateTime',\n  declaration: function declaration() {\n    return 'datetime';\n  },\n  generateTypeInfo: function generateTypeInfo() {\n    return Buffer.from([_datetimen.default.id, 0x08]);\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var value, date, days, milliseconds, threeHundredthsOfSecond, seconds, _seconds, buffer;\n\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            value = parameter.value; // Temporary solution. Remove 'any' later.\n\n            if (!(value != null)) {\n              _context.next = 16;\n              break;\n            }\n\n            if (options.useUTC) {\n              date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n            } else {\n              date = _core.LocalDate.of(value.getFullYear(), value.getMonth() + 1, value.getDate());\n            }\n\n            days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n\n            if (options.useUTC) {\n              seconds = value.getUTCHours() * 60 * 60;\n              seconds += value.getUTCMinutes() * 60;\n              seconds += value.getUTCSeconds();\n              milliseconds = seconds * 1000 + value.getUTCMilliseconds();\n            } else {\n              _seconds = value.getHours() * 60 * 60;\n              _seconds += value.getMinutes() * 60;\n              _seconds += value.getSeconds();\n              milliseconds = _seconds * 1000 + value.getMilliseconds();\n            }\n\n            threeHundredthsOfSecond = milliseconds / (3 + 1 / 3);\n            threeHundredthsOfSecond = Math.round(threeHundredthsOfSecond); // 25920000 equals one day\n\n            if (threeHundredthsOfSecond === 25920000) {\n              days += 1;\n              threeHundredthsOfSecond = 0;\n            }\n\n            buffer = Buffer.alloc(9);\n            buffer.writeUInt8(8, 0);\n            buffer.writeInt32LE(days, 1);\n            buffer.writeUInt32LE(threeHundredthsOfSecond, 5);\n            _context.next = 14;\n            return buffer;\n\n          case 14:\n            _context.next = 18;\n            break;\n\n          case 16:\n            _context.next = 18;\n            return Buffer.from([0x00]);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  // TODO: type 'any' needs to be revisited.\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTime;\nexports.default = _default;\nmodule.exports = DateTime;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/datetime.js"],"names":["Object","defineProperty","exports","value","default","_datetimen","_interopRequireDefault","require","_core","obj","__esModule","EPOCH_DATE","LocalDate","ofYearDay","DateTime","id","type","name","declaration","generateTypeInfo","Buffer","from","generateParameterData","parameter","options","useUTC","date","of","getUTCFullYear","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","days","until","ChronoUnit","DAYS","seconds","getUTCHours","getUTCMinutes","getUTCSeconds","milliseconds","getUTCMilliseconds","getHours","getMinutes","getSeconds","getMilliseconds","threeHundredthsOfSecond","Math","round","buffer","alloc","writeUInt8","writeInt32LE","writeUInt32LE","validate","Date","parse","isNaN","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _datetimen = _interopRequireDefault(require(\"./datetimen\"));\n\nvar _core = require(\"@js-joda/core\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst EPOCH_DATE = _core.LocalDate.ofYearDay(1900, 1);\n\nconst DateTime = {\n  id: 0x3D,\n  type: 'DATETIME',\n  name: 'DateTime',\n  declaration: function () {\n    return 'datetime';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([_datetimen.default.id, 0x08]);\n  },\n\n  generateParameterData: function* (parameter, options) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (value != null) {\n      let date;\n\n      if (options.useUTC) {\n        date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n      } else {\n        date = _core.LocalDate.of(value.getFullYear(), value.getMonth() + 1, value.getDate());\n      }\n\n      let days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n      let milliseconds, threeHundredthsOfSecond;\n\n      if (options.useUTC) {\n        let seconds = value.getUTCHours() * 60 * 60;\n        seconds += value.getUTCMinutes() * 60;\n        seconds += value.getUTCSeconds();\n        milliseconds = seconds * 1000 + value.getUTCMilliseconds();\n      } else {\n        let seconds = value.getHours() * 60 * 60;\n        seconds += value.getMinutes() * 60;\n        seconds += value.getSeconds();\n        milliseconds = seconds * 1000 + value.getMilliseconds();\n      }\n\n      threeHundredthsOfSecond = milliseconds / (3 + 1 / 3);\n      threeHundredthsOfSecond = Math.round(threeHundredthsOfSecond); // 25920000 equals one day\n\n      if (threeHundredthsOfSecond === 25920000) {\n        days += 1;\n        threeHundredthsOfSecond = 0;\n      }\n\n      const buffer = Buffer.alloc(9);\n      buffer.writeUInt8(8, 0);\n      buffer.writeInt32LE(days, 1);\n      buffer.writeUInt32LE(threeHundredthsOfSecond, 5);\n      yield buffer;\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n  // TODO: type 'any' needs to be revisited.\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTime;\nexports.default = _default;\nmodule.exports = DateTime;"]},"metadata":{},"sourceType":"script"}