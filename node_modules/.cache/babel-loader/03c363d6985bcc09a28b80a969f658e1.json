{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\Bakery_ReactjsSourceCode\\\\src\\\\views\\\\reports\\\\DashboardView\\\\LatestProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport { Box, Button, Card, CardHeader, Divider, IconButton, List, ListItem, ListItemAvatar, ListItemText, makeStyles } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\nconst data = [{\n  id: uuid(),\n  name: 'Dropbox',\n  imageUrl: '/static/images/products/product_1.png',\n  updatedAt: moment().subtract(2, 'hours')\n}, {\n  id: uuid(),\n  name: 'Medium Corporation',\n  imageUrl: '/static/images/products/product_2.png',\n  updatedAt: moment().subtract(2, 'hours')\n}, {\n  id: uuid(),\n  name: 'Slack',\n  imageUrl: '/static/images/products/product_3.png',\n  updatedAt: moment().subtract(3, 'hours')\n}, {\n  id: uuid(),\n  name: 'Lyft',\n  imageUrl: '/static/images/products/product_4.png',\n  updatedAt: moment().subtract(5, 'hours')\n}, {\n  id: uuid(),\n  name: 'GitHub',\n  imageUrl: '/static/images/products/product_5.png',\n  updatedAt: moment().subtract(9, 'hours')\n}];\nconst useStyles = makeStyles({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n});\n\nconst LatestProducts = ({\n  className,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [products] = useState(data);\n  const [thungan, setthungan] = useState('');\n  useEffect(() => {\n    getItemPayment();\n  }, []);\n\n  const getItemPayment = async () => {\n    await GET(LinkApi.order_getByOrderId).then(respon => {\n      console.log(\"OK\", respon);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    subtitle: `${products.length} in total`,\n    title: \"Qu\\u1EA3n l\\xFD nguy\\xEAn li\\u1EC7u\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, products.map((product, i) => /*#__PURE__*/React.createElement(ListItem, {\n    divider: i < products.length - 1,\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Product\",\n    className: classes.image,\n    src: product.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: product.name,\n    secondary: `Updated ${product.updatedAt.fromNow()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    endIcon: /*#__PURE__*/React.createElement(ArrowRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }\n    }),\n    size: \"small\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"View all\")));\n};\n\n_s(LatestProducts, \"H2MNfK1dIsamfiQJbjuRi9r/faU=\", false, function () {\n  return [useStyles];\n});\n\n_c = LatestProducts;\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\nexport default LatestProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestProducts\");","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/views/reports/DashboardView/LatestProducts.js"],"names":["React","useState","useEffect","clsx","PropTypes","v4","uuid","moment","Box","Button","Card","CardHeader","Divider","IconButton","List","ListItem","ListItemAvatar","ListItemText","makeStyles","MoreVertIcon","ArrowRightIcon","GET","LinkApi","data","id","name","imageUrl","updatedAt","subtract","useStyles","root","height","image","width","LatestProducts","className","rest","classes","products","thungan","setthungan","getItemPayment","order_getByOrderId","then","respon","console","log","length","map","product","i","fromNow","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n  const [thungan, setthungan] = useState('');\n\n  useEffect(() => {    \n    getItemPayment();\n  }, []); \n  const getItemPayment = async () => {\n    await GET(LinkApi.order_getByOrderId)\n      .then(respon => {        \n        console.log(\"OK\", respon) \n      });\n  } \n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Quản lý nguyên liệu\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n"]},"metadata":{},"sourceType":"module"}