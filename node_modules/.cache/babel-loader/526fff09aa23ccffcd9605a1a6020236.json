{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Bakery\\\\Bakery_ReactjsSourceCode\\\\src\\\\views\\\\customer\\\\CustomerListView\\\\Toolbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Button, Card, CardContent, TextField, InputAdornment, SvgIcon, makeStyles, Drawer, Typography, FormControlLabel } from '@material-ui/core';\nimport moment from 'moment';\nimport { Search as SearchIcon } from 'react-feather';\nimport MAWB from './MAWB';\n\nlet Connection = require('tedious').Connection;\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Toolbar = ({\n  className,\n  handleAddOrderToindexJS,\n  handleSearch,\n  ...rest\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [opensides, setopenside] = useState(false);\n  const [searchDate, setsearchDate] = useState('');\n\n  const list = anchor => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === 'top' || anchor === 'bottom'\n    }),\n    role: \"presentation\" //   onClick={setopenside(false)}\n    //   onKeyDown={setopenside(false)}\n    ,\n    children: /*#__PURE__*/_jsxDEV(MAWB, {\n      type: 'newMAWB',\n      handleAddOrder: handleAddOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  const handleAddOrder = item => {\n    handleAddOrderToindexJS(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: opensides,\n      onClose: () => setopenside(false),\n      children: list('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontSize: 20,\n          fontWeight: 'bold',\n          color: 'green'\n        },\n        children: [\"\\u0110\\u01A1n h\\xE0ng h\\xF4m nay \", moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\" //onClick={() => setopenside(true)}\n        ,\n        onClick: () => setopenside(true),\n        children: \"Th\\xEAm \\u0111\\u01A1n h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxWidth: 400,\n            display: \"flex\",\n            flexDirection: \"row\",\n            style: {\n              flex: 1,\n              marginRight: 100\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              type: \"date\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    flex: 1,\n                    color: \"grey\",\n                    backgroundColor: 'white',\n                    marginRight: 50,\n                    width: 100,\n                    height: 40,\n                    alignSelf: 'center'\n                  },\n                  onClick: () => searchByDate,\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              },\n              onChange: e => setsearchDate(e.target.value),\n              value: searchDate,\n              placeholder: \"Search customer\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toolbar, \"eszCL1krgUR2lmtF4hlh83i9zFw=\", false, function () {\n  return [useStyles];\n});\n\n_c = Toolbar;\nToolbar.propTypes = {\n  className: PropTypes.string\n};\nexport default Toolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/src/views/customer/CustomerListView/Toolbar.js"],"names":["React","useState","PropTypes","clsx","Box","Button","Card","CardContent","TextField","InputAdornment","SvgIcon","makeStyles","Drawer","Typography","FormControlLabel","moment","Search","SearchIcon","MAWB","Connection","require","useStyles","theme","root","importButton","marginRight","spacing","exportButton","Toolbar","className","handleAddOrderToindexJS","handleSearch","rest","classes","opensides","setopenside","searchDate","setsearchDate","list","anchor","fullList","handleAddOrder","item","fontSize","fontWeight","color","Date","format","substring","flex","startAdornment","backgroundColor","width","height","alignSelf","searchByDate","e","target","value","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Drawer,\n  Typography,\n  FormControlLabel\n} from '@material-ui/core';\nimport moment from 'moment';\nimport { Search as SearchIcon } from 'react-feather';\nimport MAWB from './MAWB';\n\nlet Connection = require('tedious').Connection;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\n\n\nconst Toolbar = ({ className, handleAddOrderToindexJS, handleSearch, ...rest }) => {\n  const classes = useStyles();\n  const [opensides, setopenside] = useState(false);\n  const [searchDate, setsearchDate] = useState('');\n  \n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n   //   onClick={setopenside(false)}\n   //   onKeyDown={setopenside(false)}\n    >\n      <MAWB type={'newMAWB'} handleAddOrder={handleAddOrder} />\n    </div>\n  );\n  const handleAddOrder = (item) => {\n    handleAddOrderToindexJS(item);\n  }\n\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Drawer anchor=\"right\" open={opensides} onClose={() => setopenside(false)}>\n        {list('')}\n      </Drawer>\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n      >\n        <Typography style={{ fontSize: 20, fontWeight: 'bold', color: 'green'}}>Đơn hàng hôm nay {moment(new Date(), 'DD-MM-YYYY').format().substring(0, 10)}</Typography>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          //onClick={() => setopenside(true)}\n          onClick={() => setopenside(true)}\n        >\n          Thêm đơn hàng\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={400} display=\"flex\" flexDirection=\"row\" style={{ flex: 1, marginRight: 100 }}>\n              <TextField\n                fullWidth\n                type=\"date\"\n                InputProps={{\n                  startAdornment: (\n                    <Button\n                      style={{ flex: 1, color: \"grey\", backgroundColor: 'white', marginRight: 50, width: 100, height: 40, alignSelf: 'center' }}\n                      onClick={() => searchByDate}\n                    >\n                      <SearchIcon />\n                    </Button>\n                  )\n                }}\n                onChange={e => setsearchDate(e.target.value)}\n                value={searchDate}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n              />\n                \n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}