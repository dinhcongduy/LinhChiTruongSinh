{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@js-joda/core\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar EPOCH_DATE = _core.LocalDate.ofYearDay(1, 1);\n\nvar DateTimeOffset = {\n  id: 0x2B,\n  type: 'DATETIMEOFFSETN',\n  name: 'DateTimeOffset',\n  declaration: function declaration(parameter) {\n    return 'datetimeoffset(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function resolveScale(parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var value, scale, buffer, timestamp, date, days, offset, _buffer;\n\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            value = parameter.value;\n            scale = parameter.scale;\n\n            if (!(value != null)) {\n              _context.next = 29;\n              break;\n            }\n\n            buffer = new _writableTrackingBuffer.default(16);\n            scale = scale;\n            timestamp = ((value.getUTCHours() * 60 + value.getUTCMinutes()) * 60 + value.getUTCSeconds()) * 1000 + value.getMilliseconds();\n            timestamp = timestamp * Math.pow(10, scale - 3);\n            timestamp += (value.nanosecondDelta != null ? value.nanosecondDelta : 0) * Math.pow(10, scale);\n            timestamp = Math.round(timestamp);\n            _context.t0 = scale;\n            _context.next = _context.t0 === 0 ? 12 : _context.t0 === 1 ? 12 : _context.t0 === 2 ? 12 : _context.t0 === 3 ? 15 : _context.t0 === 4 ? 15 : _context.t0 === 5 ? 18 : _context.t0 === 6 ? 18 : _context.t0 === 7 ? 18 : 20;\n            break;\n\n          case 12:\n            buffer.writeUInt8(8);\n            buffer.writeUInt24LE(timestamp);\n            return _context.abrupt(\"break\", 20);\n\n          case 15:\n            buffer.writeUInt8(9);\n            buffer.writeUInt32LE(timestamp);\n            return _context.abrupt(\"break\", 20);\n\n          case 18:\n            buffer.writeUInt8(10);\n            buffer.writeUInt40LE(timestamp);\n\n          case 20:\n            date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n            days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n            buffer.writeUInt24LE(days);\n            offset = -value.getTimezoneOffset();\n            buffer.writeInt16LE(offset);\n            _context.next = 27;\n            return buffer.data;\n\n          case 27:\n            _context.next = 33;\n            break;\n\n          case 29:\n            _buffer = new _writableTrackingBuffer.default(1);\n\n            _buffer.writeUInt8(0);\n\n            _context.next = 33;\n            return _buffer.data;\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTimeOffset;\nexports.default = _default;\nmodule.exports = DateTimeOffset;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/datetimeoffset.js"],"names":["Object","defineProperty","exports","value","default","_core","require","_writableTrackingBuffer","_interopRequireDefault","obj","__esModule","EPOCH_DATE","LocalDate","ofYearDay","DateTimeOffset","id","type","name","declaration","parameter","resolveScale","scale","generateTypeInfo","Buffer","from","generateParameterData","options","buffer","timestamp","getUTCHours","getUTCMinutes","getUTCSeconds","getMilliseconds","Math","pow","nanosecondDelta","round","writeUInt8","writeUInt24LE","writeUInt32LE","writeUInt40LE","date","of","getUTCFullYear","getUTCMonth","getUTCDate","days","until","ChronoUnit","DAYS","offset","getTimezoneOffset","writeInt16LE","data","validate","Date","parse","isNaN","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@js-joda/core\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"../tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst EPOCH_DATE = _core.LocalDate.ofYearDay(1, 1);\n\nconst DateTimeOffset = {\n  id: 0x2B,\n  type: 'DATETIMEOFFSETN',\n  name: 'DateTimeOffset',\n  declaration: function (parameter) {\n    return 'datetimeoffset(' + this.resolveScale(parameter) + ')';\n  },\n  resolveScale: function (parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else if (parameter.value === null) {\n      return 0;\n    } else {\n      return 7;\n    }\n  },\n\n  generateTypeInfo(parameter) {\n    return Buffer.from([this.id, parameter.scale]);\n  },\n\n  generateParameterData: function* (parameter, options) {\n    const value = parameter.value;\n    let scale = parameter.scale;\n\n    if (value != null) {\n      const buffer = new _writableTrackingBuffer.default(16);\n      scale = scale;\n      let timestamp;\n      timestamp = ((value.getUTCHours() * 60 + value.getUTCMinutes()) * 60 + value.getUTCSeconds()) * 1000 + value.getMilliseconds();\n      timestamp = timestamp * Math.pow(10, scale - 3);\n      timestamp += (value.nanosecondDelta != null ? value.nanosecondDelta : 0) * Math.pow(10, scale);\n      timestamp = Math.round(timestamp);\n\n      switch (scale) {\n        case 0:\n        case 1:\n        case 2:\n          buffer.writeUInt8(8);\n          buffer.writeUInt24LE(timestamp);\n          break;\n\n        case 3:\n        case 4:\n          buffer.writeUInt8(9);\n          buffer.writeUInt32LE(timestamp);\n          break;\n\n        case 5:\n        case 6:\n        case 7:\n          buffer.writeUInt8(10);\n          buffer.writeUInt40LE(timestamp);\n      }\n\n      const date = _core.LocalDate.of(value.getUTCFullYear(), value.getUTCMonth() + 1, value.getUTCDate());\n\n      const days = EPOCH_DATE.until(date, _core.ChronoUnit.DAYS);\n      buffer.writeUInt24LE(days);\n      const offset = -value.getTimezoneOffset();\n      buffer.writeInt16LE(offset);\n      yield buffer.data;\n    } else {\n      const buffer = new _writableTrackingBuffer.default(1);\n      buffer.writeUInt8(0);\n      yield buffer.data;\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!(value instanceof Date)) {\n      value = new Date(Date.parse(value));\n    }\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid date.');\n    }\n\n    return value;\n  }\n};\nvar _default = DateTimeOffset;\nexports.default = _default;\nmodule.exports = DateTimeOffset;"]},"metadata":{},"sourceType":"script"}