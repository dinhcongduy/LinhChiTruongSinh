{"ast":null,"code":"import _objectSpread from\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import clsx from'clsx';import moment from'moment';import{v4 as uuid}from'uuid';import PerfectScrollbar from'react-perfect-scrollbar';import{Box,Button,Card,CardHeader,Chip,Divider,Table,TableBody,TableCell,TableHead,TableRow,TableSortLabel,Tooltip,makeStyles}from'@material-ui/core';import ArrowRightIcon from'@material-ui/icons/ArrowRight';import{GET}from'src/utils/api/method';import{LinkApi}from'src/utils/api/api-link';var useStyles=makeStyles(function(){return{root:{},actions:{justifyContent:'flex-end'}};});var FutureOrders=function FutureOrders(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,1),orders=_useState2[0];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),thungan=_useState4[0],setthungan=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),data=_useState6[0],setData=_useState6[1];var _useState7=useState(moment(new Date(),'YYYY-MM-DD').format().substring(0,10)),_useState8=_slicedToArray(_useState7,2),searchDate=_useState8[0],setsearchDate=_useState8[1];useEffect(function(){makeRemoteRequest();},[]);var makeRemoteRequest=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var today,tomorrow,ngaymai,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:today=new Date();tomorrow=new Date();tomorrow.setDate(today.getDate()+1);ngaymai=moment(tomorrow,'YYYY-MM-DD').format().substring(0,10);_context.next=6;return GET(LinkApi.order_getBydate+ngaymai);case 6:res=_context.sent;console.log('res',res);if(res!==null){setData(res);}case 9:case\"end\":return _context.stop();}}},_callee);}));return function makeRemoteRequest(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Card,_objectSpread(_objectSpread({className:clsx(classes.root,className)},rest),{},{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"\\u0110\\u01A1n h\\xE0ng ng\\xE0y mai\"}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(PerfectScrollbar,{children:/*#__PURE__*/_jsx(Box,{minWidth:800,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"\\u0110\\u01A1n h\\xE0ng\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Kh\\xE1ch h\\xE0ng\"}),/*#__PURE__*/_jsx(TableCell,{sortDirection:\"desc\",children:/*#__PURE__*/_jsx(Tooltip,{enterDelay:300,title:\"Sort\",children:/*#__PURE__*/_jsx(TableSortLabel,{active:true,direction:\"desc\",children:\"Gi\\xE1\"})})}),/*#__PURE__*/_jsx(TableCell,{children:\"T\\xECnh tr\\u1EA1ng\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:data.map(function(order){return/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{children:order.ID}),/*#__PURE__*/_jsx(TableCell,{children:order.CustomerName}),/*#__PURE__*/_jsx(TableCell,{children:order.PriceTotal}),/*#__PURE__*/_jsx(TableCell,{children:order.IsConNo===1?'Chưa thanh toán':'Đã thanh toán'})]},order.id);})})]})})})]}));};export default FutureOrders;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/src/views/reports/DashboardView/FutureOrders.js"],"names":["React","useState","useEffect","clsx","moment","v4","uuid","PerfectScrollbar","Box","Button","Card","CardHeader","Chip","Divider","Table","TableBody","TableCell","TableHead","TableRow","TableSortLabel","Tooltip","makeStyles","ArrowRightIcon","GET","LinkApi","useStyles","root","actions","justifyContent","FutureOrders","className","rest","classes","orders","thungan","setthungan","data","setData","Date","format","substring","searchDate","setsearchDate","makeRemoteRequest","today","tomorrow","setDate","getDate","ngaymai","order_getBydate","res","console","log","map","order","ID","CustomerName","PriceTotal","IsConNo","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst FutureOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState([]);\n  const [thungan, setthungan] = useState('');\n  const [data, setData] = useState([]);\n  const [searchDate, setsearchDate] = useState(moment(new Date(), 'YYYY-MM-DD').format().substring(0, 10));\n\n  useEffect(() => {    \n    makeRemoteRequest();\n  }, []); \n  const makeRemoteRequest = async () => {\n    let today = new Date();\n    let tomorrow = new Date();    \n    tomorrow.setDate(today.getDate() + 1);    \n    let ngaymai= moment(tomorrow, 'YYYY-MM-DD').format().substring(0, 10);\n    let res=await GET(LinkApi.order_getBydate + ngaymai)\n    console.log('res', res);\n    if (res!==null) {\n      setData(res)\n    }\n};\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Đơn hàng ngày mai\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Đơn hàng\n                </TableCell>\n                <TableCell>\n                  Khách hàng\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Giá\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Tình trạng\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ID}\n                  </TableCell>\n                  <TableCell>\n                    {order.CustomerName}\n                  </TableCell>\n                  <TableCell>\n                    {order.PriceTotal}\n                  </TableCell>\n                  <TableCell>\n                    {order.IsConNo===1?'Chưa thanh toán':'Đã thanh toán'}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nFutureOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FutureOrders;\n"]},"metadata":{},"sourceType":"module"}