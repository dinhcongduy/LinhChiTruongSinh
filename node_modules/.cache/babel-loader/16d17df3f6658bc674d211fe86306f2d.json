{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nvar _Symbol$iterator;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n_Symbol$iterator = Symbol.iterator;\n/*\n  s2.2.6.6\n */\n\nvar SqlBatchPayload = /*#__PURE__*/function () {\n  function SqlBatchPayload(sqlText, txnDescriptor, options) {\n    _classCallCheck(this, SqlBatchPayload);\n\n    this.sqlText = void 0;\n    this.txnDescriptor = void 0;\n    this.options = void 0;\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n\n  _createClass(SqlBatchPayload, [{\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var buffer, outstandingRequestCount;\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this.options.tdsVersion >= '7_2')) {\n                _context.next = 6;\n                break;\n              }\n\n              buffer = new _writableTrackingBuffer.default(18, 'ucs2');\n              outstandingRequestCount = 1;\n              (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n              _context.next = 6;\n              return buffer.data;\n\n            case 6:\n              _context.next = 8;\n              return Buffer.from(this.sqlText, 'ucs2');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + ('SQL Batch - ' + this.sqlText);\n    }\n  }]);\n\n  return SqlBatchPayload;\n}();\n\nvar _default = SqlBatchPayload;\nexports.default = _default;\nmodule.exports = SqlBatchPayload;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/node_modules/tedious/lib/sqlbatch-payload.js"],"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","_Symbol$iterator","obj","__esModule","Symbol","iterator","SqlBatchPayload","sqlText","txnDescriptor","options","tdsVersion","buffer","outstandingRequestCount","writeToTrackingBuffer","data","Buffer","from","indent","_default","module"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,uBAAuB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,4CAAD,CAAR,CAApD;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIE,gBAAJ;;AAEA,SAASH,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/FD,gBAAgB,GAAGG,MAAM,CAACC,QAA1B;AAEA;AACA;AACA;;IACMC,e;AACJ,2BAAYC,OAAZ,EAAqBC,aAArB,EAAoCC,OAApC,EAA6C;AAAA;;AAC3C,SAAKF,OAAL,GAAe,KAAK,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAK,CAA1B;AACA,SAAKC,OAAL,GAAe,KAAK,CAApB;AACA,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD;;;SAECR,gB;;;;;;;oBACI,KAAKQ,OAAL,CAAaC,UAAb,IAA2B,K;;;;;AACvBC,cAAAA,M,GAAS,IAAId,uBAAuB,CAACD,OAA5B,CAAoC,EAApC,EAAwC,MAAxC,C;AACTgB,cAAAA,uB,GAA0B,C;AAChC,eAAC,GAAGZ,WAAW,CAACa,qBAAhB,EAAuCF,MAAvC,EAA+C,KAAKH,aAApD,EAAmEI,uBAAnE;;AACA,qBAAMD,MAAM,CAACG,IAAb;;;;AAGF,qBAAMC,MAAM,CAACC,IAAP,CAAY,KAAKT,OAAjB,EAA0B,MAA1B,CAAN;;;;;;;;;;;+BAGoB;AAAA,UAAbU,MAAa,uEAAJ,EAAI;AACpB,aAAOA,MAAM,IAAI,iBAAiB,KAAKV,OAA1B,CAAb;AACD;;;;;;AAIH,IAAIW,QAAQ,GAAGZ,eAAf;AACAZ,OAAO,CAACE,OAAR,GAAkBsB,QAAlB;AACAC,MAAM,CAACzB,OAAP,GAAiBY,eAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nlet _Symbol$iterator;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_Symbol$iterator = Symbol.iterator;\n\n/*\n  s2.2.6.6\n */\nclass SqlBatchPayload {\n  constructor(sqlText, txnDescriptor, options) {\n    this.sqlText = void 0;\n    this.txnDescriptor = void 0;\n    this.options = void 0;\n    this.sqlText = sqlText;\n    this.txnDescriptor = txnDescriptor;\n    this.options = options;\n  }\n\n  *[_Symbol$iterator]() {\n    if (this.options.tdsVersion >= '7_2') {\n      const buffer = new _writableTrackingBuffer.default(18, 'ucs2');\n      const outstandingRequestCount = 1;\n      (0, _allHeaders.writeToTrackingBuffer)(buffer, this.txnDescriptor, outstandingRequestCount);\n      yield buffer.data;\n    }\n\n    yield Buffer.from(this.sqlText, 'ucs2');\n  }\n\n  toString(indent = '') {\n    return indent + ('SQL Batch - ' + this.sqlText);\n  }\n\n}\n\nvar _default = SqlBatchPayload;\nexports.default = _default;\nmodule.exports = SqlBatchPayload;"]},"metadata":{},"sourceType":"script"}