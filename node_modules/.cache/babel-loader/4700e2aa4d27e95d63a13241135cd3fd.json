{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\Bakery_ReactjsSourceCode\\\\src\\\\views\\\\customer\\\\CustomerListView\\\\PrintInvoice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { Avatar, Box, Card, CardContent, Divider, Grid, Typography } from '@material-ui/core';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\nimport InvoiceFormat from './InvoiceFormat';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"down\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nexport default function PrintInvoice({\n  mawb,\n  number,\n  item\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [save, setSave] = React.useState(false);\n  const componentRef = useRef();\n\n  const handleClickOpen = () => {\n    setOpen(true); //del();\n  };\n\n  const del = async () => {\n    //setAnchorEl(null);\n    await GET(LinkApi.order_del + item.ID).then(respon => {\n      if (respon === \"SUCCESS\") {\n        // window.location.reload()\n        setAnchorEl(null);\n      }\n    }).catch(error => alert('error', error));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClickOpen,\n      children: \"In h\\xF3a \\u0111\\u01A1n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: true,\n      maxWidth: 'xl',\n      open: open,\n      onClose: handleClose,\n      TransitionComponent: Transition,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        style: {\n          margin: 250\n        },\n        children: /*#__PURE__*/_jsxDEV(InvoiceFormat, {\n          item: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          style: {\n            marginRight: 200\n          },\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrintInvoice, \"32vJpW683JmN7n5bfv+kS1UivcY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = PrintInvoice;\nPrintInvoice.propTypes = {\n  mawb: PropTypes.string,\n  item: PropTypes.object,\n  number: PropTypes.number\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"PrintInvoice\");","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/views/customer/CustomerListView/PrintInvoice.js"],"names":["React","useRef","makeStyles","PropTypes","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Avatar","Box","Card","CardContent","Divider","Grid","Typography","GET","LinkApi","InvoiceFormat","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","PrintInvoice","mawb","number","item","classes","open","setOpen","useState","save","setSave","componentRef","handleClickOpen","del","order_del","ID","then","respon","setAnchorEl","catch","error","alert","handleClose","margin","marginRight","propTypes","string","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,UAPF,QAQO,mBARP;AASA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,SAAS,GAAGnB,UAAU,CAAEoB,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAD+B;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADP;AAELC,IAAAA,IAAI,EAAE;AAFD;AAJgC,CAAZ,CAAD,CAA5B;AAUA,MAAMC,UAAU,gBAAG7B,KAAK,CAAC8B,UAAN,MAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAClE,sBAAO,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAA,OAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFkB,CAAnB;MAAMF,U;AAIN,eAAe,SAASI,YAAT,CAAsB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAtB,EAA8C;AAAA;;AAC3D,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBvC,KAAK,CAACwC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB1C,KAAK,CAACwC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMG,YAAY,GAAG1C,MAAM,EAA3B;;AAEA,QAAM2C,eAAe,GAAG,MAAM;AAC5BL,IAAAA,OAAO,CAAC,IAAD,CAAP,CAD4B,CAE7B;AACA,GAHD;;AAKA,QAAMM,GAAG,GAAG,YAAY;AACtB;AACA,UAAM3B,GAAG,CAACC,OAAO,CAAC2B,SAAR,GAAkBV,IAAI,CAACW,EAAxB,CAAH,CACDC,IADC,CACIC,MAAM,IAAI;AACd,UAAIA,MAAM,KAAG,SAAb,EAAwB;AACvB;AACAC,QAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACF,KANC,EAODC,KAPC,CAOKC,KAAK,IAAIC,KAAK,CAAC,OAAD,EAAUD,KAAV,CAPnB,CAAN;AAQG,GAVL;;AAYA,QAAME,WAAW,GAAG,MAAM;AACxBf,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,OAAO,EAAEK,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,QAAQ,EAAE,IAFZ;AAGE,MAAA,IAAI,EAAEN,IAHR;AAIE,MAAA,OAAO,EAAEgB,WAJX;AAKE,MAAA,mBAAmB,EAAEzB,UALvB;AAAA,8BAME,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,KAAK,EAAE;AAAE0B,UAAAA,MAAM,EAAE;AAAV,SAAnB;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEnB;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEkB,WAAjB;AAA8B,UAAA,KAAK,EAAE;AAAEE,YAAAA,WAAW,EAAE;AAAf,WAArC;AAA2D,UAAA,KAAK,EAAC,SAAjE;AAA2E,UAAA,OAAO,EAAC,WAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAlDuBvB,Y;UACNZ,S;;;MADMY,Y;AAoDxBA,YAAY,CAACwB,SAAb,GAAyB;AACvBvB,EAAAA,IAAI,EAAE/B,SAAS,CAACuD,MADO;AAEvBtB,EAAAA,IAAI,EAAEjC,SAAS,CAACwD,MAFO;AAGvBxB,EAAAA,MAAM,EAAEhC,SAAS,CAACgC;AAHK,CAAzB","sourcesContent":["import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { GET } from 'src/utils/api/method';\nimport { LinkApi } from 'src/utils/api/api-link';\nimport InvoiceFormat from './InvoiceFormat';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nexport default function PrintInvoice({ mawb, number, item }) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [save, setSave] = React.useState(false);\n  const componentRef = useRef();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n   //del();\n  };\n\n  const del = async () => {\n    //setAnchorEl(null);\n    await GET(LinkApi.order_del+item.ID)\n        .then(respon => {\n          if (respon===\"SUCCESS\") {\n           // window.location.reload()\n           setAnchorEl(null);\n          }\n        })\n        .catch(error => alert('error', error));\n      };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div onClick={handleClickOpen}>\n        In hóa đơn\n      </div>\n      <Dialog\n        fullWidth\n        maxWidth={'xl'}\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}>\n        <Box mt={6} style={{ margin: 250 }}>\n          <InvoiceFormat item={item} />\n        </Box>\n        <Divider />\n        <DialogActions>\n          <Button onClick={handleClose} style={{ marginRight: 200 }} color=\"primary\" variant=\"contained\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nPrintInvoice.propTypes = {\n  mawb: PropTypes.string,\n  item: PropTypes.object,\n  number: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}