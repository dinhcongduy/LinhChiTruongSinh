{"ast":null,"code":"import html2canvas from \"html2canvas\";\nimport pdfMake from \"pdfmake/build/pdfmake\"; // 72dpi 時の mm => px 換算比\n// 計算式は 1/(25.4mm / 72dpi)\n\nconst RATE = 2.83464566929; // A3 297mm x 419mm\n\nconst PAGE_WIDTH = 297 * RATE;\nconst PAGE_HEIGHT = 419 * RATE; // TODO: 仮置き。後でページ設計に合わせて修正\n\nconst CONTENT_WIDTH = 297 * RATE;\nconst CONTENT_HEIGHT = 419 * RATE;\nconst PAGE_MARGINS = [0 * RATE, 0 * RATE];\n/* for type-script\ninterface PdfProps {\n  dataUrl: string;\n  pageSize?: {\n    width: number;\n    height: number;\n  };\n  pageOrientation?: string;\n  contentSize?: {\n    width: number;\n    height: number;\n  };\n  pageMargins?: [number, number];\n}\n*/\n\n/**\n * HTMLからPDFを生成\n * @param {HTMLElement} element\n */\n\nexport async function createPdfFromHtml(element) {\n  const pdfProps = await createPdfProps(element);\n  createPdf(pdfProps);\n}\n/**\n * PDF出力用のPdfPropsを作成\n * @param {HTMLElement} element\n * @returns {Promise<PdfProps>}\n */\n\nasync function createPdfProps(element) {\n  // html2canvas実行\n  const options = {\n    // HACK: ブラウザ依存でcanvasサイズが変わらないように、scaleは固定値。IEでのぼやけ対策で十分大きめの2にした\n    scale: 2\n  };\n  const canvas = await html2canvas(element, options);\n  const dataUrl = canvas.toDataURL();\n  const pdfProps = {\n    dataUrl,\n    pageSize: {\n      width: PAGE_WIDTH,\n      height: PAGE_HEIGHT\n    },\n    pageOrientation: \"PORTRAIT\",\n    contentSize: {\n      width: CONTENT_WIDTH,\n      height: CONTENT_HEIGHT\n    },\n    pageMargins: PAGE_MARGINS\n  };\n  return pdfProps;\n}\n/**\n * エンコードされた画像URLを貼り付けたPDFを出力する\n * @param {PdfProps} pdfProps\n */\n\n\nfunction createPdf(pdfProps) {\n  const {\n    dataUrl,\n    contentSize,\n    pageMargins\n  } = pdfProps;\n  const pageSize = pdfProps.pageSize;\n  const pageOrientation = pdfProps.pageOrientation;\n  const documentDefinitions = {\n    pageSize,\n    pageOrientation,\n    content: {\n      image: dataUrl,\n      ...contentSize\n    },\n    pageMargins\n  };\n  pdfMake.createPdf(documentDefinitions).download();\n}","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/utils/downloadPDF/logic.js"],"names":["html2canvas","pdfMake","RATE","PAGE_WIDTH","PAGE_HEIGHT","CONTENT_WIDTH","CONTENT_HEIGHT","PAGE_MARGINS","createPdfFromHtml","element","pdfProps","createPdfProps","createPdf","options","scale","canvas","dataUrl","toDataURL","pageSize","width","height","pageOrientation","contentSize","pageMargins","documentDefinitions","content","image","download"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;AACA;;AACA,MAAMC,IAAI,GAAG,aAAb,C,CAEA;;AACA,MAAMC,UAAU,GAAG,MAAMD,IAAzB;AACA,MAAME,WAAW,GAAG,MAAMF,IAA1B,C,CAEA;;AACA,MAAMG,aAAa,GAAG,MAAMH,IAA5B;AACA,MAAMI,cAAc,GAAG,MAAMJ,IAA7B;AACA,MAAMK,YAA8B,GAAG,CAAC,IAAIL,IAAL,EAAW,IAAIA,IAAf,CAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA,OAAO,eAAeM,iBAAf,CAAiCC,OAAjC,EAA0C;AAC/C,QAAMC,QAAQ,GAAG,MAAMC,cAAc,CAACF,OAAD,CAArC;AACAG,EAAAA,SAAS,CAACF,QAAD,CAAT;AACD;AAED;AACA;AACA;AACA;AACA;;AACA,eAAeC,cAAf,CAA8BF,OAA9B,EAAuC;AACrC;AACA,QAAMI,OAAO,GAAG;AACd;AACAC,IAAAA,KAAK,EAAE;AAFO,GAAhB;AAIA,QAAMC,MAAM,GAAG,MAAMf,WAAW,CAACS,OAAD,EAAUI,OAAV,CAAhC;AAEA,QAAMG,OAAO,GAAGD,MAAM,CAACE,SAAP,EAAhB;AAEA,QAAMP,QAAQ,GAAG;AACfM,IAAAA,OADe;AAEfE,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAEhB,UADC;AAERiB,MAAAA,MAAM,EAAEhB;AAFA,KAFK;AAMfiB,IAAAA,eAAe,EAAE,UANF;AAOfC,IAAAA,WAAW,EAAE;AACXH,MAAAA,KAAK,EAAEd,aADI;AAEXe,MAAAA,MAAM,EAAEd;AAFG,KAPE;AAWfiB,IAAAA,WAAW,EAAEhB;AAXE,GAAjB;AAcA,SAAOG,QAAP;AACD;AAED;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBF,QAAnB,EAA6B;AAC3B,QAAM;AAAEM,IAAAA,OAAF;AAAWM,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAwCb,QAA9C;AACA,QAAMQ,QAAQ,GAAGR,QAAQ,CAACQ,QAA1B;AACA,QAAMG,eAAe,GAAGX,QAAQ,CAACW,eAAjC;AAEA,QAAMG,mBAAmB,GAAG;AAC1BN,IAAAA,QAD0B;AAE1BG,IAAAA,eAF0B;AAG1BI,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAEV,OADA;AAEP,SAAGM;AAFI,KAHiB;AAO1BC,IAAAA;AAP0B,GAA5B;AAUAtB,EAAAA,OAAO,CAACW,SAAR,CAAkBY,mBAAlB,EAAuCG,QAAvC;AACD","sourcesContent":["import html2canvas from \"html2canvas\";\nimport pdfMake from \"pdfmake/build/pdfmake\";\n\n// 72dpi 時の mm => px 換算比\n// 計算式は 1/(25.4mm / 72dpi)\nconst RATE = 2.83464566929;\n\n// A3 297mm x 419mm\nconst PAGE_WIDTH = 297 * RATE;\nconst PAGE_HEIGHT = 419 * RATE;\n\n// TODO: 仮置き。後でページ設計に合わせて修正\nconst CONTENT_WIDTH = 297 * RATE;\nconst CONTENT_HEIGHT = 419 * RATE;\nconst PAGE_MARGINS: [number, number] = [0 * RATE, 0 * RATE];\n\n/* for type-script\ninterface PdfProps {\n  dataUrl: string;\n  pageSize?: {\n    width: number;\n    height: number;\n  };\n  pageOrientation?: string;\n  contentSize?: {\n    width: number;\n    height: number;\n  };\n  pageMargins?: [number, number];\n}\n*/\n\n/**\n * HTMLからPDFを生成\n * @param {HTMLElement} element\n */\nexport async function createPdfFromHtml(element) {\n  const pdfProps = await createPdfProps(element);\n  createPdf(pdfProps);\n}\n\n/**\n * PDF出力用のPdfPropsを作成\n * @param {HTMLElement} element\n * @returns {Promise<PdfProps>}\n */\nasync function createPdfProps(element) {\n  // html2canvas実行\n  const options = {\n    // HACK: ブラウザ依存でcanvasサイズが変わらないように、scaleは固定値。IEでのぼやけ対策で十分大きめの2にした\n    scale: 2\n  };\n  const canvas = await html2canvas(element, options);\n\n  const dataUrl = canvas.toDataURL();\n\n  const pdfProps = {\n    dataUrl,\n    pageSize: {\n      width: PAGE_WIDTH,\n      height: PAGE_HEIGHT\n    },\n    pageOrientation: \"PORTRAIT\",\n    contentSize: {\n      width: CONTENT_WIDTH,\n      height: CONTENT_HEIGHT\n    },\n    pageMargins: PAGE_MARGINS\n  };\n\n  return pdfProps;\n}\n\n/**\n * エンコードされた画像URLを貼り付けたPDFを出力する\n * @param {PdfProps} pdfProps\n */\nfunction createPdf(pdfProps) {\n  const { dataUrl, contentSize, pageMargins } = pdfProps;\n  const pageSize = pdfProps.pageSize;\n  const pageOrientation = pdfProps.pageOrientation;\n\n  const documentDefinitions = {\n    pageSize,\n    pageOrientation,\n    content: {\n      image: dataUrl,\n      ...contentSize\n    },\n    pageMargins\n  };\n\n  pdfMake.createPdf(documentDefinitions).download();\n}\n"]},"metadata":{},"sourceType":"module"}