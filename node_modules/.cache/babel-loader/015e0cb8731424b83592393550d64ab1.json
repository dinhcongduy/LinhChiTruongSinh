{"ast":null,"code":"import React,{useState}from'react';import{Box,Button,Card,CardContent,Typography,Divider,Grid,TextField,makeStyles,Checkbox,FormControlLabel}from'@material-ui/core';import Autocomplete from'@material-ui/lab/Autocomplete';var useStyles=makeStyles(function(){return{root:{width:1150,backgroundColor:'rgb(240, 240, 240)'},inputRoot:{color:'green',fontSize:12,height:120},paper:{padding:2,textAlign:'center',color:'gray'},formControlLabel:{width:120,fontFamily:'sans-serif',fontSize:12,alignSelf:\"flex-start\",paddingLeft:11,textAlign:'start',backgroundColor:''},formControl:{width:530,margin:5,fontFamily:'sans-serif',fontSize:13,justifyContent:\"flex-end\",backgroundColor:''}};});var styles={textInput:{width:450,marginLeft:10},boxTitle:{fontSize:16,marginTop:0,color:'green'},autocomlete:{marginLeft:10,width:400,backgroundColor:''}};var InputTXT=function InputTXT(_ref){var label=_ref.label,value=_ref.value,onChange=_ref.onChange,customstyle=_ref.customstyle;return/*#__PURE__*/React.createElement(TextField,{size:\"small\",fullWidth:true// helperText=\"Please specify the first name\"\n,label:label,InputProps:customstyle===null?{style:{fontSize:13}}:{style:customstyle},InputLabelProps:{style:{fontSize:13}},name:\"firstName\",variant:\"outlined\",onChange:onChange,required:true,value:value});};var InputLabelCustom=function InputLabelCustom(_ref2){var label=_ref2.label,value=_ref2.value,onChange=_ref2.onChange,type=_ref2.type,customstyle=_ref2.customstyle,multiline=_ref2.multiline,rows=_ref2.rows,rowsMax=_ref2.rowsMax;var classes=useStyles();return/*#__PURE__*/React.createElement(FormControlLabel,{fullWidth:true,className:classes.formControl,label:/*#__PURE__*/React.createElement(Typography,{className:classes.formControlLabel},label),style:{backgroundColor:''},labelPlacement:\"start\",control:/*#__PURE__*/React.createElement(TextField,{size:\"small\",autoComplete:\"off\",type:type,style:customstyle===null?styles.textInput:customstyle,InputProps:{style:{fontSize:13}}// InputLabelProps={{ style: { fontSize: 14 } }}\n// label=\"CW\"\n,name:\"country\",onChange:onChange,required:true,value:value,variant:\"outlined\",multiline:multiline,rowsMax:rowsMax,rows:rows})});};var SelectItem=function SelectItem(_ref3){var value=_ref3.value,label=_ref3.label,data=_ref3.data,onChange=_ref3.onChange,customstyle=_ref3.customstyle;return/*#__PURE__*/React.createElement(TextField,{fullWidth:true,size:\"small\",InputProps:customstyle===null?{style:{fontSize:13,fontWeight:'bold'}}:{style:customstyle},InputLabelProps:{style:{fontSize:13}},label:label,name:\"state\",onChange:onChange,required:true,select:true,SelectProps:{native:true},value:value,variant:\"outlined\"},data.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{key:option.value,value:option},option.label);}));};export{InputTXT,SelectItem,InputLabelCustom};","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/components/custom/inputtxt.js"],"names":["React","useState","Box","Button","Card","CardContent","Typography","Divider","Grid","TextField","makeStyles","Checkbox","FormControlLabel","Autocomplete","useStyles","root","width","backgroundColor","inputRoot","color","fontSize","height","paper","padding","textAlign","formControlLabel","fontFamily","alignSelf","paddingLeft","formControl","margin","justifyContent","styles","textInput","marginLeft","boxTitle","marginTop","autocomlete","InputTXT","label","value","onChange","customstyle","style","InputLabelCustom","type","multiline","rows","rowsMax","classes","SelectItem","data","fontWeight","native","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  Checkbox, FormControlLabel\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles(() => ({\n  root: { \n    width: 1150,\n    backgroundColor: 'rgb(240, 240, 240)',\n  },\n  inputRoot: {\n    color: 'green',\n    fontSize: 12,\n    height: 120\n  },\n  paper: {\n    padding: 2,\n    textAlign: 'center',\n    color: 'gray',\n  },\n  formControlLabel: {\n    width: 120,\n    fontFamily: 'sans-serif',\n    fontSize: 12,\n    alignSelf: \"flex-start\",\n    paddingLeft: 11,\n    textAlign: 'start',\n    backgroundColor: ''\n  },\n  formControl: {\n    width: 530,\n    margin: 5,\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    justifyContent: \"flex-end\",\n    backgroundColor: ''\n  }\n}));\n\nconst styles = {\n  textInput: {\n    width: 450,\n    marginLeft: 10\n  },\n  boxTitle: {\n    fontSize: 16,\n    marginTop: 0,\n    color: 'green'\n  },\n  autocomlete: {\n    marginLeft: 10,\n    width: 400,\n    backgroundColor: ''\n  },\n};\n\nconst InputTXT = ({ label, value, onChange, customstyle}) => {    \n  return (\n    <TextField\n      size=\"small\"\n      fullWidth\n      // helperText=\"Please specify the first name\"\n      label={label}\n      InputProps={\n        customstyle=== null \n          ?{ style: { fontSize: 13 } }\n          :{ style: customstyle }\n        }\n      InputLabelProps={{ style: { fontSize: 13 } }}\n      name=\"firstName\"\n      variant=\"outlined\"\n      onChange={onChange}\n      required\n      value={value}\n    />\n  );\n};\n\nconst InputLabelCustom = ({ label, value, onChange, type, customstyle, multiline, rows, rowsMax}) => {    \n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      fullWidth\n      className={classes.formControl}\n      label={<Typography className={classes.formControlLabel}>{label}</Typography>}\n      style={{ backgroundColor: '' }}\n      labelPlacement=\"start\"\n      control={(\n        <TextField\n          size=\"small\"\n          autoComplete=\"off\"\n          type={type}\n          style={ \n          customstyle=== null \n            ?styles.textInput\n            :customstyle\n          }\n          InputProps={{ style: { fontSize: 13 } }}\n          // InputLabelProps={{ style: { fontSize: 14 } }}\n          // label=\"CW\"\n          name=\"country\"\n          onChange={onChange}\n          required\n          value={value}\n          variant=\"outlined\"         \n          multiline={multiline}\n          rowsMax={rowsMax}\n          rows={rows}\n        />\n      )}\n    />\n  );\n};\nconst SelectItem = ({ value, label, data, onChange, customstyle}) => {    \n  return (\n    <TextField\n      fullWidth\n      size=\"small\"\n      InputProps={\n        customstyle=== null \n          ?{ style: { fontSize: 13, fontWeight: 'bold' } }\n          :{ style: customstyle }\n        }\n      InputLabelProps={{ style: { fontSize: 13 } }}\n      label={label}\n      name=\"state\"\n      onChange={onChange}\n      required\n      select\n      SelectProps={{ native: true }}\n      value={value}\n      variant=\"outlined\"\n    >\n      {data.map((option) => (\n        <option\n          key={option.value}\n          value={option}\n        >\n          {option.label}\n        </option>\n      ))}\n    </TextField>\n  );\n};\n\n\nexport { InputTXT, SelectItem, InputLabelCustom };\n"]},"metadata":{},"sourceType":"module"}