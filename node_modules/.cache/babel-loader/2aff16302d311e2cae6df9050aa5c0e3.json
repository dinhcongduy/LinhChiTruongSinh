{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moneyn = _interopRequireDefault(require(\"./moneyn\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst SmallMoney = {\n  id: 0x7A,\n  type: 'MONEY4',\n  name: 'SmallMoney',\n  declaration: function () {\n    return 'smallmoney';\n  },\n  generateTypeInfo: function () {\n    return Buffer.from([_moneyn.default.id, 0x04]);\n  },\n  generateParameterData: function* (parameter) {\n    if (parameter.value != null) {\n      const buffer = Buffer.alloc(5);\n      buffer.writeUInt8(4, 0);\n      buffer.writeInt32LE(parameter.value * 10000, 1);\n      yield buffer;\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -214748.3648 || value > 214748.3647) {\n      return new TypeError('Value must be between -214748.3648 and 214748.3647.');\n    }\n\n    return value;\n  }\n};\nvar _default = SmallMoney;\nexports.default = _default;\nmodule.exports = SmallMoney;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/smallmoney.js"],"names":["Object","defineProperty","exports","value","default","_moneyn","_interopRequireDefault","require","obj","__esModule","SmallMoney","id","type","name","declaration","generateTypeInfo","Buffer","from","generateParameterData","parameter","buffer","alloc","writeUInt8","writeInt32LE","validate","parseFloat","isNaN","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,MAAME,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,IAAI,EAAE,QAFW;AAGjBC,EAAAA,IAAI,EAAE,YAHW;AAIjBC,EAAAA,WAAW,EAAE,YAAY;AACvB,WAAO,YAAP;AACD,GANgB;AAOjBC,EAAAA,gBAAgB,EAAE,YAAY;AAC5B,WAAOC,MAAM,CAACC,IAAP,CAAY,CAACZ,OAAO,CAACD,OAAR,CAAgBO,EAAjB,EAAqB,IAArB,CAAZ,CAAP;AACD,GATgB;AAUjBO,EAAAA,qBAAqB,EAAE,WAAWC,SAAX,EAAsB;AAC3C,QAAIA,SAAS,CAAChB,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,YAAMiB,MAAM,GAAGJ,MAAM,CAACK,KAAP,CAAa,CAAb,CAAf;AACAD,MAAAA,MAAM,CAACE,UAAP,CAAkB,CAAlB,EAAqB,CAArB;AACAF,MAAAA,MAAM,CAACG,YAAP,CAAoBJ,SAAS,CAAChB,KAAV,GAAkB,KAAtC,EAA6C,CAA7C;AACA,YAAMiB,MAAN;AACD,KALD,MAKO;AACL,YAAMJ,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAN;AACD;AACF,GAnBgB;AAoBjBO,EAAAA,QAAQ,EAAE,UAAUrB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAEDA,IAAAA,KAAK,GAAGsB,UAAU,CAACtB,KAAD,CAAlB;;AAEA,QAAIuB,KAAK,CAACvB,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIwB,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,QAAIxB,KAAK,GAAG,CAAC,WAAT,IAAwBA,KAAK,GAAG,WAApC,EAAiD;AAC/C,aAAO,IAAIwB,SAAJ,CAAc,qDAAd,CAAP;AACD;;AAED,WAAOxB,KAAP;AACD;AApCgB,CAAnB;AAsCA,IAAIyB,QAAQ,GAAGlB,UAAf;AACAR,OAAO,CAACE,OAAR,GAAkBwB,QAAlB;AACAC,MAAM,CAAC3B,OAAP,GAAiBQ,UAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moneyn = _interopRequireDefault(require(\"./moneyn\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SmallMoney = {\n  id: 0x7A,\n  type: 'MONEY4',\n  name: 'SmallMoney',\n  declaration: function () {\n    return 'smallmoney';\n  },\n  generateTypeInfo: function () {\n    return Buffer.from([_moneyn.default.id, 0x04]);\n  },\n  generateParameterData: function* (parameter) {\n    if (parameter.value != null) {\n      const buffer = Buffer.alloc(5);\n      buffer.writeUInt8(4, 0);\n      buffer.writeInt32LE(parameter.value * 10000, 1);\n      yield buffer;\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -214748.3648 || value > 214748.3647) {\n      return new TypeError('Value must be between -214748.3648 and 214748.3647.');\n    }\n\n    return value;\n  }\n};\nvar _default = SmallMoney;\nexports.default = _default;\nmodule.exports = SmallMoney;"]},"metadata":{},"sourceType":"script"}