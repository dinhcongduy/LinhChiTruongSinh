{"ast":null,"code":"import _defineProperty from\"C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import clsx from'clsx';import{Box,Button,Card,CardContent,CardHeader,Divider,Grid,TextField,makeStyles}from'@material-ui/core';var states=[{value:'alabama',label:'Alabama'},{value:'new-york',label:'New York'},{value:'san-francisco',label:'San Francisco'}];var useStyles=makeStyles(function(){return{root:{}};});var ProfileDetails=function ProfileDetails(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var _useState=useState({firstName:'Katarina',lastName:'Smith',email:'demo@devias.io',phone:'',state:'Alabama',country:'USA'}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var handleChange=function handleChange(event){setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},event.target.name,event.target.value)));};return/*#__PURE__*/React.createElement(\"form\",Object.assign({autoComplete:\"off\",noValidate:true,className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,{subheader:\"The information can be edited\",title:\"Profile\"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,helperText:\"Please specify the first name\",label:\"First name\",name:\"firstName\",onChange:handleChange,required:true,value:values.firstName,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Last name\",name:\"lastName\",onChange:handleChange,required:true,value:values.lastName,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Email Address\",name:\"email\",onChange:handleChange,required:true,value:values.email,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Phone Number\",name:\"phone\",onChange:handleChange,type:\"number\",value:values.phone,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Country\",name:\"country\",onChange:handleChange,required:true,value:values.country,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Country\",name:\"country\",onChange:handleChange,required:true,value:values.country,variant:\"outlined\"})),/*#__PURE__*/React.createElement(Grid,{item:true,md:6,xs:12},/*#__PURE__*/React.createElement(TextField,{fullWidth:true,label:\"Select State\",name:\"state\",onChange:handleChange,required:true,select:true,SelectProps:{native:true},value:values.state,variant:\"outlined\"},states.map(function(option){return/*#__PURE__*/React.createElement(\"option\",{key:option.value,value:option.value},option.label);}))))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"flex-end\",p:2},/*#__PURE__*/React.createElement(Button,{color:\"primary\",variant:\"contained\"},\"Save details\"))));};export default ProfileDetails;","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/views/account/AccountView/ProfileDetails.js"],"names":["React","useState","clsx","Box","Button","Card","CardContent","CardHeader","Divider","Grid","TextField","makeStyles","states","value","label","useStyles","root","ProfileDetails","className","rest","classes","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","target","name","native","map","option"],"mappings":"6qBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CAEA,OACEC,GADF,CAEEC,MAFF,CAGEC,IAHF,CAIEC,WAJF,CAKEC,UALF,CAMEC,OANF,CAOEC,IAPF,CAQEC,SARF,CASEC,UATF,KAUO,mBAVP,CAYA,GAAMC,CAAAA,MAAM,CAAG,CACb,CACEC,KAAK,CAAE,SADT,CAEEC,KAAK,CAAE,SAFT,CADa,CAKb,CACED,KAAK,CAAE,UADT,CAEEC,KAAK,CAAE,UAFT,CALa,CASb,CACED,KAAK,CAAE,eADT,CAEEC,KAAK,CAAE,eAFT,CATa,CAAf,CAeA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,iBAAO,CAClCK,IAAI,CAAE,EAD4B,CAAP,EAAD,CAA5B,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAA4B,IAAzBC,CAAAA,SAAyB,MAAzBA,SAAyB,CAAXC,IAAW,8CACjD,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CADiD,cAErBd,QAAQ,CAAC,CACnCoB,SAAS,CAAE,UADwB,CAEnCC,QAAQ,CAAE,OAFyB,CAGnCC,KAAK,CAAE,gBAH4B,CAInCC,KAAK,CAAE,EAJ4B,CAKnCC,KAAK,CAAE,SAL4B,CAMnCC,OAAO,CAAE,KAN0B,CAAD,CAFa,wCAE1CC,MAF0C,eAElCC,SAFkC,eAWjD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BF,SAAS,gCACJD,MADI,wBAENG,KAAK,CAACC,MAAN,CAAaC,IAFP,CAEcF,KAAK,CAACC,MAAN,CAAalB,KAF3B,GAAT,CAID,CALD,CAOA,mBACE,0CACE,YAAY,CAAC,KADf,CAEE,UAAU,KAFZ,CAGE,SAAS,CAAEX,IAAI,CAACkB,OAAO,CAACJ,IAAT,CAAeE,SAAf,CAHjB,EAIMC,IAJN,eAME,oBAAC,IAAD,mBACE,oBAAC,UAAD,EACE,SAAS,CAAC,+BADZ,CAEE,KAAK,CAAC,SAFR,EADF,cAKE,oBAAC,OAAD,MALF,cAME,oBAAC,WAAD,mBACE,oBAAC,IAAD,EACE,SAAS,KADX,CAEE,OAAO,CAAE,CAFX,eAIE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,UAAU,CAAC,+BAFb,CAGE,KAAK,CAAC,YAHR,CAIE,IAAI,CAAC,WAJP,CAKE,QAAQ,CAAEU,YALZ,CAME,QAAQ,KANV,CAOE,KAAK,CAAEF,MAAM,CAACN,SAPhB,CAQE,OAAO,CAAC,UARV,EALF,CAJF,cAoBE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,WAFR,CAGE,IAAI,CAAC,UAHP,CAIE,QAAQ,CAAEQ,YAJZ,CAKE,QAAQ,KALV,CAME,KAAK,CAAEF,MAAM,CAACL,QANhB,CAOE,OAAO,CAAC,UAPV,EALF,CApBF,cAmCE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,eAFR,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,CAAEO,YAJZ,CAKE,QAAQ,KALV,CAME,KAAK,CAAEF,MAAM,CAACJ,KANhB,CAOE,OAAO,CAAC,UAPV,EALF,CAnCF,cAkDE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,cAFR,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,CAAEM,YAJZ,CAKE,IAAI,CAAC,QALP,CAME,KAAK,CAAEF,MAAM,CAACH,KANhB,CAOE,OAAO,CAAC,UAPV,EALF,CAlDF,cAiEE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,SAFR,CAGE,IAAI,CAAC,SAHP,CAIE,QAAQ,CAAEK,YAJZ,CAKE,QAAQ,KALV,CAME,KAAK,CAAEF,MAAM,CAACD,OANhB,CAOE,OAAO,CAAC,UAPV,EALF,CAjEF,cAgFE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,SAFR,CAGE,IAAI,CAAC,SAHP,CAIE,QAAQ,CAAEG,YAJZ,CAKE,QAAQ,KALV,CAME,KAAK,CAAEF,MAAM,CAACD,OANhB,CAOE,OAAO,CAAC,UAPV,EALF,CAhFF,cAgGE,oBAAC,IAAD,EACE,IAAI,KADN,CAEE,EAAE,CAAE,CAFN,CAGE,EAAE,CAAE,EAHN,eAKE,oBAAC,SAAD,EACE,SAAS,KADX,CAEE,KAAK,CAAC,cAFR,CAGE,IAAI,CAAC,OAHP,CAIE,QAAQ,CAAEG,YAJZ,CAKE,QAAQ,KALV,CAME,MAAM,KANR,CAOE,WAAW,CAAE,CAAEI,MAAM,CAAE,IAAV,CAPf,CAQE,KAAK,CAAEN,MAAM,CAACF,KARhB,CASE,OAAO,CAAC,UATV,EAWGb,MAAM,CAACsB,GAAP,CAAW,SAACC,MAAD,qBACV,8BACE,GAAG,CAAEA,MAAM,CAACtB,KADd,CAEE,KAAK,CAAEsB,MAAM,CAACtB,KAFhB,EAIGsB,MAAM,CAACrB,KAJV,CADU,EAAX,CAXH,CALF,CAhGF,CADF,CANF,cAmIE,oBAAC,OAAD,MAnIF,cAoIE,oBAAC,GAAD,EACE,OAAO,CAAC,MADV,CAEE,cAAc,CAAC,UAFjB,CAGE,CAAC,CAAE,CAHL,eAKE,oBAAC,MAAD,EACE,KAAK,CAAC,SADR,CAEE,OAAO,CAAC,WAFV,iBALF,CApIF,CANF,CADF,CA0JD,CA5KD,CAkLA,cAAeG,CAAAA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ProfileDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}