{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _floatn = _interopRequireDefault(require(\"./floatn\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst Float = {\n  id: 0x3E,\n  type: 'FLT8',\n  name: 'Float',\n  declaration: function () {\n    return 'float';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([_floatn.default.id, 0x08]);\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value != null) {\n      const buffer = Buffer.alloc(9);\n      buffer.writeUInt8(8, 0);\n      buffer.writeDoubleLE(parseFloat(parameter.value), 1);\n      yield buffer;\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    return value;\n  }\n};\nvar _default = Float;\nexports.default = _default;\nmodule.exports = Float;","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/float.js"],"names":["Object","defineProperty","exports","value","default","_floatn","_interopRequireDefault","require","obj","__esModule","Float","id","type","name","declaration","generateTypeInfo","Buffer","from","generateParameterData","parameter","options","buffer","alloc","writeUInt8","writeDoubleLE","parseFloat","validate","isNaN","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,MAAME,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,IADQ;AAEZC,EAAAA,IAAI,EAAE,MAFM;AAGZC,EAAAA,IAAI,EAAE,OAHM;AAIZC,EAAAA,WAAW,EAAE,YAAY;AACvB,WAAO,OAAP;AACD,GANW;;AAQZC,EAAAA,gBAAgB,GAAG;AACjB,WAAOC,MAAM,CAACC,IAAP,CAAY,CAACZ,OAAO,CAACD,OAAR,CAAgBO,EAAjB,EAAqB,IAArB,CAAZ,CAAP;AACD,GAVW;;AAYZ,GAACO,qBAAD,CAAuBC,SAAvB,EAAkCC,OAAlC,EAA2C;AACzC,QAAID,SAAS,CAAChB,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,YAAMkB,MAAM,GAAGL,MAAM,CAACM,KAAP,CAAa,CAAb,CAAf;AACAD,MAAAA,MAAM,CAACE,UAAP,CAAkB,CAAlB,EAAqB,CAArB;AACAF,MAAAA,MAAM,CAACG,aAAP,CAAqBC,UAAU,CAACN,SAAS,CAAChB,KAAX,CAA/B,EAAkD,CAAlD;AACA,YAAMkB,MAAN;AACD,KALD,MAKO;AACL,YAAML,MAAM,CAACC,IAAP,CAAY,CAAC,IAAD,CAAZ,CAAN;AACD;AACF,GArBW;;AAuBZS,EAAAA,QAAQ,EAAE,UAAUvB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAEDA,IAAAA,KAAK,GAAGsB,UAAU,CAACtB,KAAD,CAAlB;;AAEA,QAAIwB,KAAK,CAACxB,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIyB,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,WAAOzB,KAAP;AACD;AAnCW,CAAd;AAqCA,IAAI0B,QAAQ,GAAGnB,KAAf;AACAR,OAAO,CAACE,OAAR,GAAkByB,QAAlB;AACAC,MAAM,CAAC5B,OAAP,GAAiBQ,KAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _floatn = _interopRequireDefault(require(\"./floatn\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Float = {\n  id: 0x3E,\n  type: 'FLT8',\n  name: 'Float',\n  declaration: function () {\n    return 'float';\n  },\n\n  generateTypeInfo() {\n    return Buffer.from([_floatn.default.id, 0x08]);\n  },\n\n  *generateParameterData(parameter, options) {\n    if (parameter.value != null) {\n      const buffer = Buffer.alloc(9);\n      buffer.writeUInt8(8, 0);\n      buffer.writeDoubleLE(parseFloat(parameter.value), 1);\n      yield buffer;\n    } else {\n      yield Buffer.from([0x00]);\n    }\n  },\n\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    return value;\n  }\n};\nvar _default = Float;\nexports.default = _default;\nmodule.exports = Float;"]},"metadata":{},"sourceType":"script"}