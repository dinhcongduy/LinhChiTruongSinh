{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\chant\\\\Desktop\\\\Bakery_ReactjsSourceCode\\\\src\\\\components\\\\custom\\\\inputtxt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Card, CardContent, Typography, Divider, Grid, TextField, makeStyles, Checkbox, FormControlLabel } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 1150,\n    backgroundColor: 'rgb(240, 240, 240)'\n  },\n  inputRoot: {\n    color: 'green',\n    fontSize: 12,\n    height: 120\n  },\n  paper: {\n    padding: 2,\n    textAlign: 'center',\n    color: 'gray'\n  },\n  formControlLabel: {\n    width: 120,\n    fontFamily: 'sans-serif',\n    fontSize: 12,\n    alignSelf: \"flex-start\",\n    paddingLeft: 11,\n    textAlign: 'start',\n    backgroundColor: ''\n  },\n  formControl: {\n    width: 530,\n    margin: 5,\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    justifyContent: \"flex-end\",\n    backgroundColor: ''\n  }\n}));\nconst styles = {\n  textInput: {\n    width: 450,\n    marginLeft: 10\n  },\n  boxTitle: {\n    fontSize: 16,\n    marginTop: 0,\n    color: 'green'\n  },\n  autocomlete: {\n    marginLeft: 10,\n    width: 400,\n    backgroundColor: ''\n  }\n};\n\nconst InputTXT = ({\n  label,\n  value,\n  onChange,\n  customstyle\n}) => {\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    size: \"small\",\n    fullWidth: true // helperText=\"Please specify the first name\"\n    ,\n    label: label,\n    InputProps: customstyle === null ? {\n      style: {\n        fontSize: 13\n      }\n    } : {\n      style: customstyle\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 13\n      }\n    },\n    name: \"firstName\",\n    variant: \"outlined\",\n    onChange: onChange,\n    required: true,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c = InputTXT;\n\nconst InputLabelCustom = ({\n  label,\n  value,\n  onChange,\n  type,\n  customstyle,\n  multiline,\n  rows,\n  rowsMax\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    fullWidth: true,\n    className: classes.formControl,\n    label: /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.formControlLabel,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 14\n    }, this),\n    style: {\n      backgroundColor: ''\n    },\n    labelPlacement: \"start\",\n    control: /*#__PURE__*/_jsxDEV(TextField, {\n      size: \"small\",\n      autoComplete: \"off\",\n      type: type,\n      style: customstyle === null ? styles.textInput : customstyle,\n      InputProps: {\n        style: {\n          fontSize: 13\n        }\n      } // InputLabelProps={{ style: { fontSize: 14 } }}\n      // label=\"CW\"\n      ,\n      name: \"country\",\n      onChange: onChange,\n      required: true,\n      value: value,\n      variant: \"outlined\",\n      multiline: multiline,\n      rowsMax: rowsMax,\n      rows: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputLabelCustom, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = InputLabelCustom;\n\nconst SelectItem = ({\n  value,\n  label,\n  data,\n  onChange,\n  customstyle\n}) => {\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    size: \"small\",\n    InputProps: customstyle === null ? {\n      style: {\n        fontSize: 13,\n        fontWeight: 'bold'\n      }\n    } : {\n      style: customstyle\n    },\n    InputLabelProps: {\n      style: {\n        fontSize: 13\n      }\n    },\n    label: label,\n    name: \"state\",\n    onChange: onChange,\n    required: true,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: value,\n    variant: \"outlined\",\n    children: data.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = SelectItem;\nexport { InputTXT, SelectItem, InputLabelCustom };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"InputTXT\");\n$RefreshReg$(_c2, \"InputLabelCustom\");\n$RefreshReg$(_c3, \"SelectItem\");","map":{"version":3,"sources":["C:/Users/chant/Desktop/Bakery_ReactjsSourceCode/src/components/custom/inputtxt.js"],"names":["React","useState","PropTypes","Box","Button","Card","CardContent","Typography","Divider","Grid","TextField","makeStyles","Checkbox","FormControlLabel","Autocomplete","useStyles","root","width","backgroundColor","inputRoot","color","fontSize","height","paper","padding","textAlign","formControlLabel","fontFamily","alignSelf","paddingLeft","formControl","margin","justifyContent","styles","textInput","marginLeft","boxTitle","marginTop","autocomlete","InputTXT","label","value","onChange","customstyle","style","InputLabelCustom","type","multiline","rows","rowsMax","classes","SelectItem","data","fontWeight","native","map","option"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles,\n  Checkbox, FormControlLabel\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles(() => ({\n  root: { \n    width: 1150,\n    backgroundColor: 'rgb(240, 240, 240)',\n  },\n  inputRoot: {\n    color: 'green',\n    fontSize: 12,\n    height: 120\n  },\n  paper: {\n    padding: 2,\n    textAlign: 'center',\n    color: 'gray',\n  },\n  formControlLabel: {\n    width: 120,\n    fontFamily: 'sans-serif',\n    fontSize: 12,\n    alignSelf: \"flex-start\",\n    paddingLeft: 11,\n    textAlign: 'start',\n    backgroundColor: ''\n  },\n  formControl: {\n    width: 530,\n    margin: 5,\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    justifyContent: \"flex-end\",\n    backgroundColor: ''\n  }\n}));\n\nconst styles = {\n  textInput: {\n    width: 450,\n    marginLeft: 10\n  },\n  boxTitle: {\n    fontSize: 16,\n    marginTop: 0,\n    color: 'green'\n  },\n  autocomlete: {\n    marginLeft: 10,\n    width: 400,\n    backgroundColor: ''\n  },\n};\n\nconst InputTXT = ({ label, value, onChange, customstyle}) => {    \n  return (\n    <TextField\n      size=\"small\"\n      fullWidth\n      // helperText=\"Please specify the first name\"\n      label={label}\n      InputProps={\n        customstyle=== null \n          ?{ style: { fontSize: 13 } }\n          :{ style: customstyle }\n        }\n      InputLabelProps={{ style: { fontSize: 13 } }}\n      name=\"firstName\"\n      variant=\"outlined\"\n      onChange={onChange}\n      required\n      value={value}\n    />\n  );\n};\n\nconst InputLabelCustom = ({ label, value, onChange, type, customstyle, multiline, rows, rowsMax}) => {    \n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      fullWidth\n      className={classes.formControl}\n      label={<Typography className={classes.formControlLabel}>{label}</Typography>}\n      style={{ backgroundColor: '' }}\n      labelPlacement=\"start\"\n      control={(\n        <TextField\n          size=\"small\"\n          autoComplete=\"off\"\n          type={type}\n          style={ \n          customstyle=== null \n            ?styles.textInput\n            :customstyle\n          }\n          InputProps={{ style: { fontSize: 13 } }}\n          // InputLabelProps={{ style: { fontSize: 14 } }}\n          // label=\"CW\"\n          name=\"country\"\n          onChange={onChange}\n          required\n          value={value}\n          variant=\"outlined\"         \n          multiline={multiline}\n          rowsMax={rowsMax}\n          rows={rows}\n        />\n      )}\n    />\n  );\n};\nconst SelectItem = ({ value, label, data, onChange, customstyle}) => {    \n  return (\n    <TextField\n      fullWidth\n      size=\"small\"\n      InputProps={\n        customstyle=== null \n          ?{ style: { fontSize: 13, fontWeight: 'bold' } }\n          :{ style: customstyle }\n        }\n      InputLabelProps={{ style: { fontSize: 13 } }}\n      label={label}\n      name=\"state\"\n      onChange={onChange}\n      required\n      select\n      SelectProps={{ native: true }}\n      value={value}\n      variant=\"outlined\"\n    >\n      {data.map((option) => (\n        <option\n          key={option.value}\n          value={option}\n        >\n          {option.label}\n        </option>\n      ))}\n    </TextField>\n  );\n};\n\n\nexport { InputTXT, SelectItem, InputLabelCustom };\n"]},"metadata":{},"sourceType":"module"}