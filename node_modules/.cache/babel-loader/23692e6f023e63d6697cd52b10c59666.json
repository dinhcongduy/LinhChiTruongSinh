{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/Bakery/Bakery_ReactjsSourceCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar Text = {\n  id: 0x23,\n  type: 'TEXT',\n  name: 'Text',\n  hasTableName: true,\n  declaration: function declaration() {\n    return 'text';\n  },\n  resolveLength: function resolveLength(parameter) {\n    var value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n  generateTypeInfo: function generateTypeInfo(parameter, _options) {\n    var buffer = Buffer.alloc(5);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length, 1);\n    return buffer;\n  },\n  generateParameterData: /*#__PURE__*/_regeneratorRuntime.mark(function generateParameterData(parameter, options) {\n    var buffer, _buffer;\n\n    return _regeneratorRuntime.wrap(function generateParameterData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00]);\n\n          case 2:\n            if (!(parameter.value != null)) {\n              _context.next = 11;\n              break;\n            }\n\n            buffer = Buffer.alloc(4);\n            buffer.writeInt32LE(parameter.length, 0);\n            _context.next = 7;\n            return buffer;\n\n          case 7:\n            _context.next = 9;\n            return Buffer.from(parameter.value.toString(), 'ascii');\n\n          case 9:\n            _context.next = 15;\n            break;\n\n          case 11:\n            _buffer = Buffer.alloc(4);\n\n            _buffer.writeInt32LE(parameter.length, 0);\n\n            _context.next = 15;\n            return _buffer;\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, generateParameterData);\n  }),\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = Text;\nexports.default = _default;\nmodule.exports = Text;","map":{"version":3,"sources":["D:/Bakery/Bakery_ReactjsSourceCode/node_modules/tedious/lib/data-types/text.js"],"names":["Object","defineProperty","exports","value","default","Text","id","type","name","hasTableName","declaration","resolveLength","parameter","length","generateTypeInfo","_options","buffer","Buffer","alloc","writeUInt8","writeInt32LE","generateParameterData","options","from","toString","validate","TypeError","_default","module"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,IADO;AAEXC,EAAAA,IAAI,EAAE,MAFK;AAGXC,EAAAA,IAAI,EAAE,MAHK;AAIXC,EAAAA,YAAY,EAAE,IAJH;AAKXC,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,MAAP;AACD,GAPU;AAQXC,EAAAA,aAAa,EAAE,uBAAUC,SAAV,EAAqB;AAClC,QAAMT,KAAK,GAAGS,SAAS,CAACT,KAAxB,CADkC,CACH;;AAE/B,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAOA,KAAK,CAACU,MAAb;AACD,KAFD,MAEO;AACL,aAAO,CAAC,CAAR;AACD;AACF,GAhBU;AAkBXC,EAAAA,gBAlBW,4BAkBMF,SAlBN,EAkBiBG,QAlBjB,EAkB2B;AACpC,QAAMC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb,CAAf;AACAF,IAAAA,MAAM,CAACG,UAAP,CAAkB,KAAKb,EAAvB,EAA2B,CAA3B;AACAU,IAAAA,MAAM,CAACI,YAAP,CAAoBR,SAAS,CAACC,MAA9B,EAAsC,CAAtC;AACA,WAAOG,MAAP;AACD,GAvBU;AAyBXK,EAAAA,qBAAqB,wCAAE,+BAAWT,SAAX,EAAsBU,OAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB,mBAAML,MAAM,CAACM,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAZ,CAAN;;AADqB;AAAA,kBAGjBX,SAAS,CAACT,KAAV,IAAmB,IAHF;AAAA;AAAA;AAAA;;AAIba,YAAAA,MAJa,GAIJC,MAAM,CAACC,KAAP,CAAa,CAAb,CAJI;AAKnBF,YAAAA,MAAM,CAACI,YAAP,CAAoBR,SAAS,CAACC,MAA9B,EAAsC,CAAtC;AALmB;AAMnB,mBAAMG,MAAN;;AANmB;AAAA;AAOnB,mBAAMC,MAAM,CAACM,IAAP,CAAYX,SAAS,CAACT,KAAV,CAAgBqB,QAAhB,EAAZ,EAAwC,OAAxC,CAAN;;AAPmB;AAAA;AAAA;;AAAA;AASbR,YAAAA,OATa,GASJC,MAAM,CAACC,KAAP,CAAa,CAAb,CATI;;AAUnBF,YAAAA,OAAM,CAACI,YAAP,CAAoBR,SAAS,CAACC,MAA9B,EAAsC,CAAtC;;AAVmB;AAWnB,mBAAMG,OAAN;;AAXmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF,CAzBV;AAuCXS,EAAAA,QAAQ,EAAE,kBAAUtB,KAAV,EAAiB;AACzB,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI,OAAOA,KAAK,CAACqB,QAAb,KAA0B,UAA9B,EAA0C;AACxC,eAAOE,SAAS,CAAC,iBAAD,CAAhB;AACD;;AAEDvB,MAAAA,KAAK,GAAGA,KAAK,CAACqB,QAAN,EAAR;AACD;;AAED,WAAOrB,KAAP;AACD;AArDU,CAAb;AAuDA,IAAIwB,QAAQ,GAAGtB,IAAf;AACAH,OAAO,CAACE,OAAR,GAAkBuB,QAAlB;AACAC,MAAM,CAAC1B,OAAP,GAAiBG,IAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst Text = {\n  id: 0x23,\n  type: 'TEXT',\n  name: 'Text',\n  hasTableName: true,\n  declaration: function () {\n    return 'text';\n  },\n  resolveLength: function (parameter) {\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (value != null) {\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n\n  generateTypeInfo(parameter, _options) {\n    const buffer = Buffer.alloc(5);\n    buffer.writeUInt8(this.id, 0);\n    buffer.writeInt32LE(parameter.length, 1);\n    return buffer;\n  },\n\n  generateParameterData: function* (parameter, options) {\n    yield Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00]);\n\n    if (parameter.value != null) {\n      const buffer = Buffer.alloc(4);\n      buffer.writeInt32LE(parameter.length, 0);\n      yield buffer;\n      yield Buffer.from(parameter.value.toString(), 'ascii');\n    } else {\n      const buffer = Buffer.alloc(4);\n      buffer.writeInt32LE(parameter.length, 0);\n      yield buffer;\n    }\n  },\n  validate: function (value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = Text;\nexports.default = _default;\nmodule.exports = Text;"]},"metadata":{},"sourceType":"script"}